# IPython log file

import subprocess
help(subprocess)
get_ipython().magic(u'cd ..')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd family\\ moments')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd structure\\ comparisons')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd family\\ moments')
get_ipython().magic(u'cd "family moments/"')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd structures/')
get_ipython().system(u'dir /on ')
import glob
x = glob.glob('*')
x[:10]
#[Out]# ['aligned_1A0S.pdb', 'aligned_1AF6.pdb', 'aligned_1E54.pdb', 'aligned_1FEP.pdb', 'aligned_1I78.pdb', 'aligned_1K24.pdb', 'aligned_1KMO.pdb', 'aligned_1P4T.pdb', 'aligned_1QD6.pdb', 'aligned_1QFG.pdb']
import os
os.listdir('*')
os.listdir('.')
#[Out]# ['aligned_1A0S.pdb', 'aligned_1AF6.pdb', 'aligned_1E54.pdb', 'aligned_1FEP.pdb', 'aligned_1I78.pdb', 'aligned_1K24.pdb', 'aligned_1KMO.pdb', 'aligned_1P4T.pdb', 'aligned_1QD6.pdb', 'aligned_1QFG.pdb', 'aligned_1QJ8.pdb', 'aligned_1QJP.pdb', 'aligned_1T16.pdb', 'aligned_1THQ.pdb', 'aligned_1TLY.pdb', 'aligned_1UYN.pdb', 'aligned_2ERV.pdb', 'aligned_2F1C.pdb', 'aligned_2F1V.pdb', 'aligned_2GUF.pdb', 'aligned_2J1N.pdb', 'aligned_2O4V.pdb', 'aligned_2POR.pdb', 'aligned_2QDZ.pdb', 'aligned_2VQI.pdb', 'aligned_2WJR.pdb', 'aligned_3BS0.pdb', 'aligned_3CSL.pdb', 'aligned_3DWO.pdb', 'aligned_3DZM.pdb', 'aligned_3EFM.pdb', 'aligned_3EMN.pdb', 'aligned_3FHH.pdb', 'aligned_3JTY.pdb', 'aligned_3PRN.pdb']
get_ipython().magic(u'cd ..')
get_ipython().magic(u'logstart -o')
get_ipython().system(u"mkdir 'dssp'")
get_ipython().magic(u'pinfo subprocess')
for filename in os.listdir('structures'):
    PDBID = re
import re
for filename in os.listdir('structures'):
    PDBID = re.match('aligned_(....)\.pdb', filename).group(0)
for filename in os.listdir('structures'):
    PDBID = re.match('aligned_(....)\.pdb', filename).group(0)
PDBID
#[Out]# 'aligned_3PRN.pdb'
for filename in os.listdir('structures'):
    PDBID = re.match('aligned_(....)\.pdb', filename).group(1)
    subprocess.call(['dssp', 'structures/'+filename, 'dssp/{} single chain.dssp'.format(PDBID)])
get_ipython().system(u'dir /on ')
for filename in os.listdir('structures'):
    PDBID = re.match('aligned_(....)\.pdb', filename).group(1)
    subprocess.call(['dssp', 'structures/'+filename, 'dssp/{} single chain.dssp'.format(PDBID)])
get_ipython().magic(u'logstop')
from Bio.PDB import DSSP
DSSP
#[Out]# <class Bio.PDB.DSSP.DSSP at 0x0454A9D0>
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd dssp/')
get_ipython().system(u'dir /on ')
x = DSSP.make_dssp_dict("3PRN single chain.dssp")
dir(DSSP)
#[Out]# ['__contains__', '__doc__', '__getitem__', '__init__', '__iter__', '__len__', '__module__', '_translate_id', 'has_key', 'keys']
import Bio.PDB.DSSP
help(DSSP)
import Bio.PDB
get_ipython().magic(u'pinfo PDB.make_DSSP')
get_ipython().magic(u'pinfo PDB.make_dssp_dict')
from Bio.PDB import DSSP'
from Bio.PDB import DSSP`
from Bio.PDB import DSSP'
from Bio.PDB import DSSP\'
from Bio.PDB.DSSP' import *
from Bio.PDB.DSSP import *
get_ipython().magic(u'pinfo make_dssp_dict')
import Bio.PDB.DSSP
get_ipython().magic(u'pinfo Bio.PDB.DSSP')
get_ipython().magic(u'cd ..')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd structures/')
from Bio.PDB import DSSP
get_ipython().magic(u'pinfo DSSP')
get_ipython().system(u'dir /on ')
with warnings.catch_warnings():
    warnings.simplefilter('ignore')
    x = Bio.PDB.PDBParser('aligned_3PRN.pdb').get_structure()
import warnings
with warnings.catch_warnings():
    warnings.simplefilter('ignore')
    x = Bio.PDB.PDBParser('aligned_3PRN.pdb').get_structure()
with warnings.catch_warnings():
    warnings.simplefilter('ignore')
    x = Bio.PDB.PDBParser('aligned_3PRN.pdb').get_structure('3PRN')
with warnings.catch_warnings():
    warnings.simplefilter('ignore')
    x = Bio.PDB.PDBParser().get_structure('3PRN', 'aligned_3PRN.pdb')
type(x)
#[Out]# <type 'instance'>
x
#[Out]# <Structure id=3PRN>
x.get_residues.next()
y = x.get_residues()
type(y)
#[Out]# <type 'generator'>
y.next()
#[Out]# <Residue MET het=  resseq=1 icode= >
y.next()
#[Out]# <Residue ILE het=  resseq=2 icode= >
y.next()
#[Out]# <Residue SER het=  resseq=3 icode= >
x
#[Out]# <Structure id=3PRN>
y = Bio.PDB.DSSP(x, 'aligned_3PRN.pdb')
y = Bio.PDB.DSSP(x, 'aligned_3PRN.pdb')
y = Bio.PDB.DSSP(x, 'aligned_3PRN.pdb')
y = Bio.PDB.DSSP(x, 'aligned_3PRN.pdb')
f = open('aligned_3PRN.pdb', 'r')
f.close()
import tempfile
get_ipython().magic(u'pinfo tempfile')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd ..')
f = open('test.txt', 'r')
f = open('test.txt', 'w')
g = open('test.txt', 'r')
g.close()
f.close()
f = tempfile.NamedTemporaryFile()
f.name
#[Out]# 'c:\\users\\nandal~1\\appdata\\local\\temp\\tmp1pjxwn'
g = open(f.name, 'r')
get_ipython().magic(u'pinfo f')
dir(f)
#[Out]# ['__doc__',
#[Out]#  '__enter__',
#[Out]#  '__exit__',
#[Out]#  '__getattr__',
#[Out]#  '__init__',
#[Out]#  '__module__',
#[Out]#  '__repr__',
#[Out]#  '__str__',
#[Out]#  'close_called',
#[Out]#  'delete',
#[Out]#  'file',
#[Out]#  'name']
f.name()
f.name
#[Out]# 'c:\\users\\nandal~1\\appdata\\local\\temp\\tmp1pjxwn'
f.close()
f = tempfile.NamedTemporaryFile(delete=False)
f.name
#[Out]# 'c:\\users\\nandal~1\\appdata\\local\\temp\\tmp_7h6w4'
f.write('lalala')
f.close()
f.delete()
type(f)
#[Out]# instance
f.delete
#[Out]# False
dir(f)
#[Out]# ['__doc__',
#[Out]#  '__enter__',
#[Out]#  '__exit__',
#[Out]#  '__getattr__',
#[Out]#  '__init__',
#[Out]#  '__module__',
#[Out]#  'close',
#[Out]#  'close_called',
#[Out]#  'delete',
#[Out]#  'file',
#[Out]#  'name',
#[Out]#  'write']
f.file
#[Out]# <closed file '<fdopen>', mode 'w+b' at 0x04555B20>
f = tempfile.NamedTemporaryFile()
g = open(f, 'r')
f
#[Out]# <open file '<fdopen>', mode 'w+b' at 0x045554F0>
g = open(f.name, 'r')
f.close()
f = tempfile.NamedTemporaryFile(delete=False)
f.write('lalalala')
f.close()
open(f, 'r').readlines()
open(f.name, 'r').readlines()
#[Out]# ['lalalala']
os.remove(f.name)
open(f.name, 'r').readlines()
get_ipython().magic(u'cd ..')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd family\\ moments')
get_ipython().system(u'dir /on ')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd family\\ moments')
get_ipython().magic(u'cd "family moments/"')
get_ipython().system(u'dir /on ')
f = open('test.txt', 'w')
f.flush()
get_ipython().magic(u'pinfo f.flush')
x
#[Out]# <Structure id=3PRN>
import DSSP_win
get_ipython().magic(u'cd structures/')
get_ipython().magic(u'cd ..')
import DSSP_win
x
#[Out]# <Structure id=3PRN>
y = DSSP_win.DSSP(x, 'structures/aligned_3PRN.pdb')
y
#[Out]# <DSSP_win.DSSP instance at 0x045CC1C0>
get_ipython().magic(u'pinfo y')
get_ipython().magic(u'pinfo y')
y.keys()
#[Out]# []
y
#[Out]# <DSSP_win.DSSP instance at 0x045CC1C0>
y.data
reload(DSSP_win)
#[Out]# <module 'DSSP_win' from 'C:\cygwin\home\alex\beta-barrel-oligomerization\modules\DSSP_win.py'>
y = DSSP_win.DSSP(x, 'structures/aligned_3PRN.pdb')
dir(x)
#[Out]# ['__delitem__',
#[Out]#  '__doc__',
#[Out]#  '__getitem__',
#[Out]#  '__init__',
#[Out]#  '__iter__',
#[Out]#  '__len__',
#[Out]#  '__module__',
#[Out]#  '__repr__',
#[Out]#  '_sort',
#[Out]#  'add',
#[Out]#  'child_dict',
#[Out]#  'child_list',
#[Out]#  'detach_child',
#[Out]#  'detach_parent',
#[Out]#  'full_id',
#[Out]#  'get_atoms',
#[Out]#  'get_chains',
#[Out]#  'get_full_id',
#[Out]#  'get_id',
#[Out]#  'get_iterator',
#[Out]#  'get_level',
#[Out]#  'get_list',
#[Out]#  'get_parent',
#[Out]#  'get_residues',
#[Out]#  'has_id',
#[Out]#  'header',
#[Out]#  'id',
#[Out]#  'level',
#[Out]#  'parent',
#[Out]#  'set_parent',
#[Out]#  'xtra']
x.get_chains
#[Out]# <bound method Structure.get_chains of <Structure id=3PRN>>
x.get_chains()
#[Out]# <generator object get_chains at 0x048F3030>
x.get_chains().next()
#[Out]# <Chain id=A>
list(x.get_chains)
list(x.get_chains())
#[Out]# [<Chain id=A>, <Chain id= >]
x.get_models()
dir(x)
#[Out]# ['__delitem__',
#[Out]#  '__doc__',
#[Out]#  '__getitem__',
#[Out]#  '__init__',
#[Out]#  '__iter__',
#[Out]#  '__len__',
#[Out]#  '__module__',
#[Out]#  '__repr__',
#[Out]#  '_sort',
#[Out]#  'add',
#[Out]#  'child_dict',
#[Out]#  'child_list',
#[Out]#  'detach_child',
#[Out]#  'detach_parent',
#[Out]#  'full_id',
#[Out]#  'get_atoms',
#[Out]#  'get_chains',
#[Out]#  'get_full_id',
#[Out]#  'get_id',
#[Out]#  'get_iterator',
#[Out]#  'get_level',
#[Out]#  'get_list',
#[Out]#  'get_parent',
#[Out]#  'get_residues',
#[Out]#  'has_id',
#[Out]#  'header',
#[Out]#  'id',
#[Out]#  'level',
#[Out]#  'parent',
#[Out]#  'set_parent',
#[Out]#  'xtra']
dssp_dict = DSSP_win.dssp_dict_from_pdb_file('structures/aligned_3PRN').pdb
dssp_dict = DSSP_win.dssp_dict_from_pdb_file('structures/aligned_3PRN.pdb')
x
#[Out]# <Structure id=3PRN>
dssp_dict
#[Out]# ({('A', (' ', 1, ' ')): ('M', '-', 147, 360.0, 140.5),
#[Out]#   ('A', (' ', 2, ' ')): ('I', 'E', 123, -120.0, 123.4),
#[Out]#   ('A', (' ', 3, ' ')): ('S', 'E', 57, -122.9, 153.5),
#[Out]#   ('A', (' ', 4, ' ')): ('L', 'E', 112, -118.3, 138.6),
#[Out]#   ('A', (' ', 5, ' ')): ('N', 'E', 75, -148.7, 171.0),
#[Out]#   ('A', (' ', 6, ' ')): ('G', 'E', 4, 169.3, -161.8),
#[Out]#   ('A', (' ', 7, ' ')): ('Y', 'E', 10, -157.7, 154.9),
#[Out]#   ('A', (' ', 8, ' ')): ('G', 'E', 5, -121.4, 151.1),
#[Out]#   ('A', (' ', 9, ' ')): ('R', 'E', 16, -147.6, 148.1),
#[Out]#   ('A', (' ', 10, ' ')): ('F', 'E', 108, -155.8, 156.7),
#[Out]#   ('A', (' ', 11, ' ')): ('G', 'E', 11, 171.6, -161.3),
#[Out]#   ('A', (' ', 12, ' ')): ('L', 'E', 84, -110.6, 137.1),
#[Out]#   ('A', (' ', 13, ' ')): ('Q', 'E', 42, -128.0, 119.6),
#[Out]#   ('A', (' ', 14, ' ')): ('Y', 'E', 71, -115.4, 131.7),
#[Out]#   ('A', (' ', 15, ' ')): ('V', 'E', 37, -130.1, 108.1),
#[Out]#   ('A', (' ', 16, ' ')): ('E', 'T', 85, -54.8, 129.7),
#[Out]#   ('A', (' ', 17, ' ')): ('D', 'T', 132, 44.3, 59.7),
#[Out]#   ('A', (' ', 18, ' ')): ('R', '-', 72, -58.2, -31.4),
#[Out]#   ('A', (' ', 19, ' ')): ('G', 'S', 33, 163.1, 155.3),
#[Out]#   ('A', (' ', 20, ' ')): ('V', 'T', 154, -60.5, 125.6),
#[Out]#   ('A', (' ', 21, ' ')): ('G', 'T', 90, 75.5, 10.4),
#[Out]#   ('A', (' ', 22, ' ')): ('L', '-', 107, -107.1, 147.4),
#[Out]#   ('A', (' ', 23, ' ')): ('E', '-', 147, -72.2, 135.2),
#[Out]#   ('A', (' ', 24, ' ')): ('D', 'S', 42, -75.1, -32.9),
#[Out]#   ('A', (' ', 25, ' ')): ('T', 'E', 62, -105.9, 123.8),
#[Out]#   ('A', (' ', 26, ' ')): ('I', 'E', 51, -125.8, 168.4),
#[Out]#   ('A', (' ', 27, ' ')): ('I', 'E', 119, -91.0, 109.3),
#[Out]#   ('A', (' ', 28, ' ')): ('S', 'E', 6, -102.9, 136.0),
#[Out]#   ('A', (' ', 29, ' ')): ('S', 'E', 23, -151.5, 161.6),
#[Out]#   ('A', (' ', 30, ' ')): ('R', 'E', 52, -148.8, 139.7),
#[Out]#   ('A', (' ', 31, ' ')): ('L', 'E', 73, -118.8, 123.9),
#[Out]#   ('A', (' ', 32, ' ')): ('R', 'E', 43, -121.0, 127.3),
#[Out]#   ('A', (' ', 33, ' ')): ('I', 'E', 49, -121.2, 128.1),
#[Out]#   ('A', (' ', 34, ' ')): ('N', 'E', 16, -108.2, 135.3),
#[Out]#   ('A', (' ', 35, ' ')): ('I', 'E', 49, -115.7, 119.0),
#[Out]#   ('A', (' ', 36, ' ')): ('V', 'E', 22, -122.4, 124.3),
#[Out]#   ('A', (' ', 37, ' ')): ('G', 'E', 23, -107.9, 133.1),
#[Out]#   ('A', (' ', 38, ' ')): ('T', 'E', 22, -137.1, 143.3),
#[Out]#   ('A', (' ', 39, ' ')): ('T', 'E', 91, -126.4, 112.6),
#[Out]#   ('A', (' ', 40, ' ')): ('E', '-', 135, -93.0, 150.7),
#[Out]#   ('A', (' ', 41, ' ')): ('T', '-', 52, -128.9, 160.4),
#[Out]#   ('A', (' ', 42, ' ')): ('D', 'T', 151, -77.3, -9.9),
#[Out]#   ('A', (' ', 43, ' ')): ('Q', 'T', 142, -79.7, -6.6),
#[Out]#   ('A', (' ', 44, ' ')): ('G', 'S', 45, 88.1, 6.4),
#[Out]#   ('A', (' ', 45, ' ')): ('V', '-', 38, -95.8, 124.1),
#[Out]#   ('A', (' ', 46, ' ')): ('T', 'E', 42, -104.8, 139.2),
#[Out]#   ('A', (' ', 47, ' ')): ('F', 'E', 97, -113.2, 139.9),
#[Out]#   ('A', (' ', 48, ' ')): ('G', 'E', 9, -146.2, 159.9),
#[Out]#   ('A', (' ', 49, ' ')): ('A', 'E', 34, -142.4, 143.3),
#[Out]#   ('A', (' ', 50, ' ')): ('K', 'E', 41, -138.5, 147.2),
#[Out]#   ('A', (' ', 51, ' ')): ('L', 'E', 63, -130.5, 145.3),
#[Out]#   ('A', (' ', 52, ' ')): ('R', 'E', 22, -120.8, 141.5),
#[Out]#   ('A', (' ', 53, ' ')): ('M', 'E', 66, -123.3, 108.1),
#[Out]#   ('A', (' ', 54, ' ')): ('Q', 'E', 12, -126.3, 134.2),
#[Out]#   ('A', (' ', 55, ' ')): ('W', 'E', 74, -119.2, 138.1),
#[Out]#   ('A', (' ', 56, ' ')): ('D', 'E', 22, -125.5, 148.6),
#[Out]#   ('A', (' ', 57, ' ')): ('D', 'T', 48, -57.3, 140.2),
#[Out]#   ('A', (' ', 58, ' ')): ('G', 'T', 79, 92.6, -12.6),
#[Out]#   ('A', (' ', 59, ' ')): ('D', '-', 42, -58.0, 140.1),
#[Out]#   ('A', (' ', 60, ' ')): ('A', 'G', 53, -58.7, 142.7),
#[Out]#   ('A', (' ', 61, ' ')): ('F', 'G', 184, 69.0, 1.1),
#[Out]#   ('A', (' ', 62, ' ')): ('A', 'G', 92, 55.1, 42.8),
#[Out]#   ('A', (' ', 63, ' ')): ('G', '-', 33, -138.9, 170.0),
#[Out]#   ('A', (' ', 64, ' ')): ('T', '-', 71, -134.2, 142.5),
#[Out]#   ('A', (' ', 65, ' ')): ('A', '-', 48, -139.2, 172.6),
#[Out]#   ('A', (' ', 66, ' ')): ('G', 'B', 29, -87.9, 162.8),
#[Out]#   ('A', (' ', 67, ' ')): ('N', '-', 17, -94.5, -162.8),
#[Out]#   ('A', (' ', 68, ' ')): ('A', '-', 65, -92.2, 149.3),
#[Out]#   ('A', (' ', 69, ' ')): ('A', '-', 38, -74.3, 155.9),
#[Out]#   ('A', (' ', 70, ' ')): ('Q', 'E', 12, -122.9, 139.0),
#[Out]#   ('A', (' ', 71, ' ')): ('F', 'E', 103, -126.3, 144.9),
#[Out]#   ('A', (' ', 72, ' ')): ('W', 'E', 49, -145.8, 162.4),
#[Out]#   ('A', (' ', 73, ' ')): ('T', 'E', 58, -136.6, 127.5),
#[Out]#   ('A', (' ', 74, ' ')): ('S', 'E', 30, -121.5, 142.0),
#[Out]#   ('A', (' ', 75, ' ')): ('Y', 'E', 123, -161.5, 119.6),
#[Out]#   ('A', (' ', 76, ' ')): ('N', 'T', 126, 55.8, 49.0),
#[Out]#   ('A', (' ', 77, ' ')): ('G', 'T', 41, 83.3, -12.0),
#[Out]#   ('A', (' ', 78, ' ')): ('V', 'E', 55, -101.9, 134.4),
#[Out]#   ('A', (' ', 79, ' ')): ('T', 'E', 35, -127.7, 128.3),
#[Out]#   ('A', (' ', 80, ' ')): ('V', 'E', 59, -113.5, 129.0),
#[Out]#   ('A', (' ', 81, ' ')): ('S', 'E', 13, -126.8, 148.0),
#[Out]#   ('A', (' ', 82, ' ')): ('V', 'E', 59, -136.5, 151.4),
#[Out]#   ('A', (' ', 83, ' ')): ('G', 'E', 8, 97.1, -122.8),
#[Out]#   ('A', (' ', 84, ' ')): ('N', 'S', 5, -86.8, 83.6),
#[Out]#   ('A', (' ', 85, ' ')): ('V', '-', 0, -87.8, 158.3),
#[Out]#   ('A', (' ', 86, ' ')): ('D', '-', 59, -77.6, 132.3),
#[Out]#   ('A', (' ', 87, ' ')): ('T', '-', 3, -99.0, 158.8),
#[Out]#   ('A', (' ', 88, ' ')): ('A', 'H', 1, -59.6, -44.7),
#[Out]#   ('A', (' ', 89, ' ')): ('F', 'H', 3, -67.5, -27.3),
#[Out]#   ('A', (' ', 90, ' ')): ('D', 'H', 44, -88.0, -19.5),
#[Out]#   ('A', (' ', 91, ' ')): ('S', 'H', 39, -100.0, -16.3),
#[Out]#   ('A', (' ', 92, ' ')): ('V', 'S', 7, -58.1, 154.8),
#[Out]#   ('A', (' ', 93, ' ')): ('A', 'S', 40, -73.7, 162.4),
#[Out]#   ('A', (' ', 94, ' ')): ('L', 'S', 12, 77.3, -31.7),
#[Out]#   ('A', (' ', 95, ' ')): ('T', 'T', 2, -61.9, -25.7),
#[Out]#   ('A', (' ', 96, ' ')): ('Y', 'T', 57, -110.7, 10.7),
#[Out]#   ('A', (' ', 97, ' ')): ('D', 'T', 75, -72.2, 1.3),
#[Out]#   ('A', (' ', 98, ' ')): ('S', 'T', 3, -91.2, -6.1),
#[Out]#   ('A', (' ', 99, ' ')): ('E', '-', 39, -58.3, 151.5),
#[Out]#   ('A', (' ', 100, ' ')): ('M', 'B', 0, -157.0, 171.4),
#[Out]#   ('A', (' ', 101, ' ')): ('G', 'T', 0, 82.7, 170.4),
#[Out]#   ('A', (' ', 102, ' ')): ('Y', 'T', 2, -72.6, -7.4),
#[Out]#   ('A', (' ', 103, ' ')): ('E', 'T', 34, -108.9, 13.8),
#[Out]#   ('A', (' ', 104, ' ')): ('W', 'T', 52, 45.7, 62.8),
#[Out]#   ('A', (' ', 105, ' ')): ('S', 'B', 41, -120.2, 156.1),
#[Out]#   ('A', (' ', 106, ' ')): ('S', '-', 14, -166.2, 132.8),
#[Out]#   ('A', (' ', 107, ' ')): ('F', 'T', 38, -68.7, -18.4),
#[Out]#   ('A', (' ', 108, ' ')): ('G', 'T', 0, -78.9, -2.0),
#[Out]#   ('A', (' ', 109, ' ')): ('D', 'S', 21, -72.0, 157.3),
#[Out]#   ('A', (' ', 110, ' ')): ('A', '-', 17, -52.1, 135.9),
#[Out]#   ('A', (' ', 111, ' ')): ('Q', '-', 63, -102.4, 57.8),
#[Out]#   ('A', (' ', 112, ' ')): ('S', 'S', 19, -129.5, 170.2),
#[Out]#   ('A', (' ', 113, ' ')): ('S', '-', 72, -106.4, 129.9),
#[Out]#   ('A', (' ', 114, ' ')): ('F', '-', 45, -158.3, 157.3),
#[Out]#   ('A', (' ', 115, ' ')): ('F', '-', 33, -73.2, 151.5),
#[Out]#   ('A', (' ', 116, ' ')): ('A', '-', 23, -153.8, 169.5),
#[Out]#   ('A', (' ', 117, ' ')): ('Y', '-', 22, -49.8, 132.9),
#[Out]#   ('A', (' ', 118, ' ')): ('N', '-', 39, -94.3, 113.6),
#[Out]#   ('A', (' ', 119, ' ')): ('S', '-', 29, -73.6, -19.8),
#[Out]#   ('A', (' ', 120, ' ')): ('K', 'S', 53, -137.1, 173.5),
#[Out]#   ('A', (' ', 121, ' ')): ('Y', '-', 113, -69.7, 166.2),
#[Out]#   ('A', (' ', 122, ' ')): ('D', '-', 60, -127.1, 110.8),
#[Out]#   ('A', (' ', 123, ' ')): ('A', 'T', 88, -68.1, -18.8),
#[Out]#   ('A', (' ', 124, ' ')): ('S', 'T', 87, -66.3, -19.9),
#[Out]#   ('A', (' ', 125, ' ')): ('G', 'S', 30, 90.6, -7.2),
#[Out]#   ('A', (' ', 126, ' ')): ('A', 'T', 67, -63.5, -31.1),
#[Out]#   ('A', (' ', 127, ' ')): ('L', 'T', 47, -93.4, 8.3),
#[Out]#   ('A', (' ', 128, ' ')): ('D', 'T', 124, -59.1, -33.8),
#[Out]#   ('A', (' ', 129, ' ')): ('N', 'T', 64, -117.7, 22.3),
#[Out]#   ('A', (' ', 130, ' ')): ('Y', '-', 23, -72.3, 130.4),
#[Out]#   ('A', (' ', 131, ' ')): ('N', 'E', 38, -148.4, 129.7),
#[Out]#   ('A', (' ', 132, ' ')): ('G', 'E', 0, -122.3, 164.9),
#[Out]#   ('A', (' ', 133, ' ')): ('I', 'E', 79, -129.8, 135.4),
#[Out]#   ('A', (' ', 134, ' ')): ('A', 'E', 3, -134.5, 154.4),
#[Out]#   ('A', (' ', 135, ' ')): ('V', 'E', 53, -136.9, 129.8),
#[Out]#   ('A', (' ', 136, ' ')): ('T', 'E', 40, -125.9, 145.6),
#[Out]#   ('A', (' ', 137, ' ')): ('Y', 'E', 105, -136.9, 114.2),
#[Out]#   ('A', (' ', 138, ' ')): ('S', 'E', 65, -107.9, 103.2),
#[Out]#   ('A', (' ', 139, ' ')): ('I', '-', 74, -117.2, 61.3),
#[Out]#   ('A', (' ', 140, ' ')): ('S', 'S', 119, 52.9, 100.9),
#[Out]#   ('A', (' ', 141, ' ')): ('G', 'S', 39, 82.7, -34.5),
#[Out]#   ('A', (' ', 142, ' ')): ('V', 'E', 38, -99.0, 139.1),
#[Out]#   ('A', (' ', 143, ' ')): ('N', 'E', 44, -130.5, 131.0),
#[Out]#   ('A', (' ', 144, ' ')): ('L', 'E', 58, -113.5, 144.5),
#[Out]#   ('A', (' ', 145, ' ')): ('Y', 'E', 33, -137.9, 135.4),
#[Out]#   ('A', (' ', 146, ' ')): ('L', 'E', 64, -132.3, 136.6),
#[Out]#   ('A', (' ', 147, ' ')): ('S', 'E', 3, -143.5, 147.1),
#[Out]#   ('A', (' ', 148, ' ')): ('Y', 'E', 81, -134.0, 121.2),
#[Out]#   ('A', (' ', 149, ' ')): ('V', 'E', 0, -122.3, 125.5),
#[Out]#   ('A', (' ', 150, ' ')): ('D', 'E', 15, -107.1, 115.7),
#[Out]#   ('A', (' ', 151, ' ')): ('P', 'T', 33, -70.2, -14.9),
#[Out]#   ('A', (' ', 152, ' ')): ('D', 'T', 49, -151.3, 87.1),
#[Out]#   ('A', (' ', 153, ' ')): ('Q', 'T', 110, -68.1, -14.5),
#[Out]#   ('A', (' ', 154, ' ')): ('T', 'T', 91, -85.1, -22.7),
#[Out]#   ('A', (' ', 155, ' ')): ('V', 'S', 57, -87.9, 147.3),
#[Out]#   ('A', (' ', 156, ' ')): ('D', '-', 102, -43.1, 132.3),
#[Out]#   ('A', (' ', 157, ' ')): ('S', 'G', 67, -52.2, -34.7),
#[Out]#   ('A', (' ', 158, ' ')): ('S', 'G', 102, -82.6, -5.0),
#[Out]#   ('A', (' ', 159, ' ')): ('L', 'G', 128, -94.1, -2.4),
#[Out]#   ('A', (' ', 160, ' ')): ('V', 'S', 31, -129.9, 158.2),
#[Out]#   ('A', (' ', 161, ' ')): ('T', '-', 39, -96.7, 121.3),
#[Out]#   ('A', (' ', 162, ' ')): ('E', '-', 41, -98.1, 151.7),
#[Out]#   ('A', (' ', 163, ' ')): ('E', 'E', 1, -103.1, 128.5),
#[Out]#   ('A', (' ', 164, ' ')): ('F', 'E', 88, -119.5, 129.0),
#[Out]#   ('A', (' ', 165, ' ')): ('G', 'E', 0, -129.3, 149.5),
#[Out]#   ('A', (' ', 166, ' ')): ('I', 'E', 69, -143.3, 147.6),
#[Out]#   ('A', (' ', 167, ' ')): ('A', 'E', 4, -157.5, 158.4),
#[Out]#   ('A', (' ', 168, ' ')): ('A', 'E', 37, -152.0, 149.3),
#[Out]#   ('A', (' ', 169, ' ')): ('D', 'E', 11, -139.5, 161.5),
#[Out]#   ('A', (' ', 170, ' ')): ('W', 'E', 100, -154.6, 139.4),
#[Out]#   ('A', (' ', 171, ' ')): ('S', 'E', 45, -148.9, 154.4),
#[Out]#   ('A', (' ', 172, ' ')): ('N', '-', 68, -125.7, -149.4),
#[Out]#   ('A', (' ', 173, ' ')): ('D', 'S', 129, -76.5, -28.0),
#[Out]#   ('A', (' ', 174, ' ')): ('M', 'S', 105, -112.8, -36.4),
#[Out]#   ('A', (' ', 175, ' ')): ('I', 'E', 70, -114.5, 147.5),
#[Out]#   ('A', (' ', 176, ' ')): ('S', 'E', 18, -138.9, 140.4),
#[Out]#   ('A', (' ', 177, ' ')): ('L', 'E', 87, -128.3, 148.5),
#[Out]#   ('A', (' ', 178, ' ')): ('A', 'E', 7, -155.1, 148.7),
#[Out]#   ('A', (' ', 179, ' ')): ('A', 'E', 45, -152.0, 152.8),
#[Out]#   ('A', (' ', 180, ' ')): ('A', 'E', 9, -154.0, 151.4),
#[Out]#   ('A', (' ', 181, ' ')): ('Y', 'E', 109, -147.7, 135.7),
#[Out]#   ('A', (' ', 182, ' ')): ('T', 'E', 0, -138.0, 126.5),
#[Out]#   ('A', (' ', 183, ' ')): ('T', 'E', 40, -100.0, 143.4),
#[Out]#   ('A', (' ', 184, ' ')): ('D', 'S', 40, 53.4, 47.0),
#[Out]#   ('A', (' ', 185, ' ')): ('A', 'G', 0, -57.1, 130.9),
#[Out]#   ('A', (' ', 186, ' ')): ('G', 'G', 19, 76.8, 9.6),
#[Out]#   ('A', (' ', 187, ' ')): ('G', 'G', 21, 74.9, 22.6),
#[Out]#   ('A', (' ', 188, ' ')): ('I', '-', 72, -104.5, 117.4),
#[Out]#   ('A', (' ', 189, ' ')): ('V', 'T', 80, -54.9, 136.0),
#[Out]#   ('A', (' ', 190, ' ')): ('D', 'T', 109, 67.4, 10.5),
#[Out]#   ('A', (' ', 191, ' ')): ('N', '-', 4, -84.8, 79.8),
#[Out]#   ('A', (' ', 192, ' ')): ('D', '-', 53, -98.1, 122.8),
#[Out]#   ('A', (' ', 193, ' ')): ('I', 'E', 0, -120.8, 158.7),
#[Out]#   ('A', (' ', 194, ' ')): ('A', 'E', 18, -152.4, 155.9),
#[Out]#   ('A', (' ', 195, ' ')): ('F', 'E', 2, -141.6, 141.7),
#[Out]#   ('A', (' ', 196, ' ')): ('V', 'E', 78, -142.3, 131.4),
#[Out]#   ('A', (' ', 197, ' ')): ('G', 'E', 4, -142.9, 163.3),
#[Out]#   ('A', (' ', 198, ' ')): ('A', 'E', 39, -153.2, 153.9),
#[Out]#   ('A', (' ', 199, ' ')): ('A', 'E', 10, -145.7, 150.1),
#[Out]#   ('A', (' ', 200, ' ')): ('Y', 'E', 119, -130.3, 121.7),
#[Out]#   ('A', (' ', 201, ' ')): ('K', '-', 102, -86.2, 88.5),
#[Out]#   ('A', (' ', 202, ' ')): ('F', '-', 98, -74.8, 21.0),
#[Out]#   ('A', (' ', 203, ' ')): ('N', 'S', 78, -179.3, -164.8),
#[Out]#   ('A', (' ', 204, ' ')): ('D', 'S', 159, -91.4, -17.3),
#[Out]#   ('A', (' ', 205, ' ')): ('A', 'S', 25, -111.0, -26.7),
#[Out]#   ('A', (' ', 206, ' ')): ('G', 'E', 2, -121.0, 159.5),
#[Out]#   ('A', (' ', 207, ' ')): ('T', 'E', 32, -144.7, 144.5),
#[Out]#   ('A', (' ', 208, ' ')): ('V', 'E', 58, -133.3, 138.1),
#[Out]#   ('A', (' ', 209, ' ')): ('G', 'E', 5, -146.5, 168.6),
#[Out]#   ('A', (' ', 210, ' ')): ('L', 'E', 94, -142.7, 122.0),
#[Out]#   ('A', (' ', 211, ' ')): ('N', 'E', 0, -117.4, 138.3),
#[Out]#   ('A', (' ', 212, ' ')): ('W', 'E', 96, -121.0, 137.1),
#[Out]#   ('A', (' ', 213, ' ')): ('Y', 'E', 0, -130.1, 152.6),
#[Out]#   ('A', (' ', 214, ' ')): ('D', 'E', 55, -109.1, 112.4),
#[Out]#   ('A', (' ', 215, ' ')): ('N', '-', 0, -89.0, 17.6),
#[Out]#   ('A', (' ', 216, ' ')): ('G', 'T', 24, 54.9, -125.9),
#[Out]#   ('A', (' ', 217, ' ')): ('L', 'T', 112, -83.0, -1.0),
#[Out]#   ('A', (' ', 218, ' ')): ('S', 'S', 37, -58.1, 150.5),
#[Out]#   ('A', (' ', 219, ' ')): ('T', 'T', 113, -71.4, -7.7),
#[Out]#   ('A', (' ', 220, ' ')): ('A', 'T', 3, -73.1, -27.3),
#[Out]#   ('A', (' ', 221, ' ')): ('G', '-', 21, 72.6, -160.3),
#[Out]#   ('A', (' ', 222, ' ')): ('D', 'S', 56, -65.7, 157.8),
#[Out]#   ('A', (' ', 223, ' ')): ('Q', 'E', 2, -148.2, 147.6),
#[Out]#   ('A', (' ', 224, ' ')): ('V', 'E', 64, -134.1, 137.4),
#[Out]#   ('A', (' ', 225, ' ')): ('T', 'E', 0, -129.9, 128.7),
#[Out]#   ('A', (' ', 226, ' ')): ('L', 'E', 87, -114.9, 125.1),
#[Out]#   ('A', (' ', 227, ' ')): ('Y', 'E', 7, -141.3, 166.6),
#[Out]#   ('A', (' ', 228, ' ')): ('G', 'E', 22, -158.8, 160.9),
#[Out]#   ('A', (' ', 229, ' ')): ('N', 'E', 30, -150.8, 153.5),
#[Out]#   ('A', (' ', 230, ' ')): ('Y', 'E', 79, -145.3, 130.9),
#[Out]#   ('A', (' ', 231, ' ')): ('A', 'E', 39, -103.6, 127.1),
#[Out]#   ('A', (' ', 232, ' ')): ('F', 'E', 126, -115.3, 82.7),
#[Out]#   ('A', (' ', 233, ' ')): ('G', 'T', 80, 70.9, -120.3),
#[Out]#   ('A', (' ', 234, ' ')): ('A', 'T', 41, -88.5, -7.5),
#[Out]#   ('A', (' ', 235, ' ')): ('T', 'E', 53, -99.7, 133.5),
#[Out]#   ('A', (' ', 236, ' ')): ('T', 'E', 32, -118.0, 135.5),
#[Out]#   ('A', (' ', 237, ' ')): ('V', 'E', 55, -113.0, 136.2),
#[Out]#   ('A', (' ', 238, ' ')): ('R', 'E', 48, -128.9, 151.5),
#[Out]#   ('A', (' ', 239, ' ')): ('A', 'E', 48, -151.8, 160.1),
#[Out]#   ('A', (' ', 240, ' ')): ('Y', 'E', 6, -159.2, 160.4),
#[Out]#   ('A', (' ', 241, ' ')): ('V', 'E', 63, -137.0, 143.1),
#[Out]#   ('A', (' ', 242, ' ')): ('S', 'E', 0, -144.1, 144.4),
#[Out]#   ('A', (' ', 243, ' ')): ('D', 'E', 79, -127.6, 136.8),
#[Out]#   ('A', (' ', 244, ' ')): ('I', 'E', 16, -117.3, 162.0),
#[Out]#   ('A', (' ', 245, ' ')): ('D', '-', 113, -77.0, -17.0),
#[Out]#   ('A', (' ', 246, ' ')): ('R', 'S', 91, -52.0, 134.7),
#[Out]#   ('A', (' ', 247, ' ')): ('A', 'T', 98, -56.4, 125.4),
#[Out]#   ('A', (' ', 248, ' ')): ('G', 'T', 81, 83.2, -1.0),
#[Out]#   ('A', (' ', 249, ' ')): ('A', '-', 28, -63.6, 147.7),
#[Out]#   ('A', (' ', 250, ' ')): ('D', '-', 70, -79.5, 162.2),
#[Out]#   ('A', (' ', 251, ' ')): ('T', '-', 63, -77.4, 131.3),
#[Out]#   ('A', (' ', 252, ' ')): ('A', 'E', 0, -92.7, 149.9),
#[Out]#   ('A', (' ', 253, ' ')): ('Y', 'E', 127, -153.7, 162.2),
#[Out]#   ('A', (' ', 254, ' ')): ('G', 'E', 6, -159.1, 152.2),
#[Out]#   ('A', (' ', 255, ' ')): ('I', 'E', 92, -138.0, 133.6),
#[Out]#   ('A', (' ', 256, ' ')): ('G', 'E', 7, -151.5, -178.4),
#[Out]#   ('A', (' ', 257, ' ')): ('A', 'E', 40, -152.3, 152.0),
#[Out]#   ('A', (' ', 258, ' ')): ('D', 'E', 6, -122.1, 145.4),
#[Out]#   ('A', (' ', 259, ' ')): ('Y', 'E', 116, -129.3, 121.1),
#[Out]#   ('A', (' ', 260, ' ')): ('Q', 'E', 80, -85.0, 91.9),
#[Out]#   ('A', (' ', 261, ' ')): ('F', 'E', 143, -66.7, -37.4),
#[Out]#   ('A', (' ', 262, ' ')): ('A', 'E', 47, -167.8, 172.3),
#[Out]#   ('A', (' ', 263, ' ')): ('E', 'T', 195, -57.7, 132.4),
#[Out]#   ('A', (' ', 264, ' ')): ('G', 'T', 26, 73.2, 0.2),
#[Out]#   ('A', (' ', 265, ' ')): ('V', 'E', 38, -124.1, 117.9),
#[Out]#   ('A', (' ', 266, ' ')): ('K', 'E', 56, -128.5, 129.9),
#[Out]#   ('A', (' ', 267, ' ')): ('V', 'E', 52, -101.0, 127.8),
#[Out]#   ('A', (' ', 268, ' ')): ('S', 'E', 5, -138.5, 156.0),
#[Out]#   ('A', (' ', 269, ' ')): ('G', 'E', 17, -155.1, 159.2),
#[Out]#   ('A', (' ', 270, ' ')): ('S', 'E', 10, -157.9, 162.3),
#[Out]#   ('A', (' ', 271, ' ')): ('V', 'E', 74, -133.2, 125.1),
#[Out]#   ('A', (' ', 272, ' ')): ('Q', 'E', 6, -137.0, 154.7),
#[Out]#   ('A', (' ', 273, ' ')): ('S', 'E', 9, -130.5, 127.2),
#[Out]#   ('A', (' ', 274, ' ')): ('G', '-', 0, -85.6, -177.8),
#[Out]#   ('A', (' ', 275, ' ')): ('F', 'T', 7, -71.7, -17.8),
#[Out]#   ('A', (' ', 276, ' ')): ('A', 'T', 62, -114.5, 31.1),
#[Out]#   ('A', (' ', 277, ' ')): ('N', '-', 105, 64.0, 13.3),
#[Out]#   ('A', (' ', 278, ' ')): ('E', '-', 78, -64.6, 141.4),
#[Out]#   ('A', (' ', 279, ' ')): ('T', 'E', 41, -112.8, 127.1),
#[Out]#   ('A', (' ', 280, ' ')): ('V', 'E', 31, -131.8, 148.0),
#[Out]#   ('A', (' ', 281, ' ')): ('A', 'E', 27, -145.1, 158.7),
#[Out]#   ('A', (' ', 282, ' ')): ('D', 'E', 14, -155.3, 157.0),
#[Out]#   ('A', (' ', 283, ' ')): ('V', 'E', 74, -152.2, 129.9),
#[Out]#   ('A', (' ', 284, ' ')): ('G', 'E', 6, -170.3, -176.7),
#[Out]#   ('A', (' ', 285, ' ')): ('V', 'E', 36, -124.5, 144.6),
#[Out]#   ('A', (' ', 286, ' ')): ('R', 'E', 58, -123.8, 137.8),
#[Out]#   ('A', (' ', 287, ' ')): ('F', 'E', 78, -133.1, 132.6),
#[Out]#   ('A', (' ', 288, ' ')): ('D', 'E', 80, -100.1, 137.5),
#[Out]#   ('A', (' ', 289, ' ')): ('F', '-', 127, -139.8, 360.0)},
#[Out]#  [('A', (' ', 1, ' ')),
#[Out]#   ('A', (' ', 2, ' ')),
#[Out]#   ('A', (' ', 3, ' ')),
#[Out]#   ('A', (' ', 4, ' ')),
#[Out]#   ('A', (' ', 5, ' ')),
#[Out]#   ('A', (' ', 6, ' ')),
#[Out]#   ('A', (' ', 7, ' ')),
#[Out]#   ('A', (' ', 8, ' ')),
#[Out]#   ('A', (' ', 9, ' ')),
#[Out]#   ('A', (' ', 10, ' ')),
#[Out]#   ('A', (' ', 11, ' ')),
#[Out]#   ('A', (' ', 12, ' ')),
#[Out]#   ('A', (' ', 13, ' ')),
#[Out]#   ('A', (' ', 14, ' ')),
#[Out]#   ('A', (' ', 15, ' ')),
#[Out]#   ('A', (' ', 16, ' ')),
#[Out]#   ('A', (' ', 17, ' ')),
#[Out]#   ('A', (' ', 18, ' ')),
#[Out]#   ('A', (' ', 19, ' ')),
#[Out]#   ('A', (' ', 20, ' ')),
#[Out]#   ('A', (' ', 21, ' ')),
#[Out]#   ('A', (' ', 22, ' ')),
#[Out]#   ('A', (' ', 23, ' ')),
#[Out]#   ('A', (' ', 24, ' ')),
#[Out]#   ('A', (' ', 25, ' ')),
#[Out]#   ('A', (' ', 26, ' ')),
#[Out]#   ('A', (' ', 27, ' ')),
#[Out]#   ('A', (' ', 28, ' ')),
#[Out]#   ('A', (' ', 29, ' ')),
#[Out]#   ('A', (' ', 30, ' ')),
#[Out]#   ('A', (' ', 31, ' ')),
#[Out]#   ('A', (' ', 32, ' ')),
#[Out]#   ('A', (' ', 33, ' ')),
#[Out]#   ('A', (' ', 34, ' ')),
#[Out]#   ('A', (' ', 35, ' ')),
#[Out]#   ('A', (' ', 36, ' ')),
#[Out]#   ('A', (' ', 37, ' ')),
#[Out]#   ('A', (' ', 38, ' ')),
#[Out]#   ('A', (' ', 39, ' ')),
#[Out]#   ('A', (' ', 40, ' ')),
#[Out]#   ('A', (' ', 41, ' ')),
#[Out]#   ('A', (' ', 42, ' ')),
#[Out]#   ('A', (' ', 43, ' ')),
#[Out]#   ('A', (' ', 44, ' ')),
#[Out]#   ('A', (' ', 45, ' ')),
#[Out]#   ('A', (' ', 46, ' ')),
#[Out]#   ('A', (' ', 47, ' ')),
#[Out]#   ('A', (' ', 48, ' ')),
#[Out]#   ('A', (' ', 49, ' ')),
#[Out]#   ('A', (' ', 50, ' ')),
#[Out]#   ('A', (' ', 51, ' ')),
#[Out]#   ('A', (' ', 52, ' ')),
#[Out]#   ('A', (' ', 53, ' ')),
#[Out]#   ('A', (' ', 54, ' ')),
#[Out]#   ('A', (' ', 55, ' ')),
#[Out]#   ('A', (' ', 56, ' ')),
#[Out]#   ('A', (' ', 57, ' ')),
#[Out]#   ('A', (' ', 58, ' ')),
#[Out]#   ('A', (' ', 59, ' ')),
#[Out]#   ('A', (' ', 60, ' ')),
#[Out]#   ('A', (' ', 61, ' ')),
#[Out]#   ('A', (' ', 62, ' ')),
#[Out]#   ('A', (' ', 63, ' ')),
#[Out]#   ('A', (' ', 64, ' ')),
#[Out]#   ('A', (' ', 65, ' ')),
#[Out]#   ('A', (' ', 66, ' ')),
#[Out]#   ('A', (' ', 67, ' ')),
#[Out]#   ('A', (' ', 68, ' ')),
#[Out]#   ('A', (' ', 69, ' ')),
#[Out]#   ('A', (' ', 70, ' ')),
#[Out]#   ('A', (' ', 71, ' ')),
#[Out]#   ('A', (' ', 72, ' ')),
#[Out]#   ('A', (' ', 73, ' ')),
#[Out]#   ('A', (' ', 74, ' ')),
#[Out]#   ('A', (' ', 75, ' ')),
#[Out]#   ('A', (' ', 76, ' ')),
#[Out]#   ('A', (' ', 77, ' ')),
#[Out]#   ('A', (' ', 78, ' ')),
#[Out]#   ('A', (' ', 79, ' ')),
#[Out]#   ('A', (' ', 80, ' ')),
#[Out]#   ('A', (' ', 81, ' ')),
#[Out]#   ('A', (' ', 82, ' ')),
#[Out]#   ('A', (' ', 83, ' ')),
#[Out]#   ('A', (' ', 84, ' ')),
#[Out]#   ('A', (' ', 85, ' ')),
#[Out]#   ('A', (' ', 86, ' ')),
#[Out]#   ('A', (' ', 87, ' ')),
#[Out]#   ('A', (' ', 88, ' ')),
#[Out]#   ('A', (' ', 89, ' ')),
#[Out]#   ('A', (' ', 90, ' ')),
#[Out]#   ('A', (' ', 91, ' ')),
#[Out]#   ('A', (' ', 92, ' ')),
#[Out]#   ('A', (' ', 93, ' ')),
#[Out]#   ('A', (' ', 94, ' ')),
#[Out]#   ('A', (' ', 95, ' ')),
#[Out]#   ('A', (' ', 96, ' ')),
#[Out]#   ('A', (' ', 97, ' ')),
#[Out]#   ('A', (' ', 98, ' ')),
#[Out]#   ('A', (' ', 99, ' ')),
#[Out]#   ('A', (' ', 100, ' ')),
#[Out]#   ('A', (' ', 101, ' ')),
#[Out]#   ('A', (' ', 102, ' ')),
#[Out]#   ('A', (' ', 103, ' ')),
#[Out]#   ('A', (' ', 104, ' ')),
#[Out]#   ('A', (' ', 105, ' ')),
#[Out]#   ('A', (' ', 106, ' ')),
#[Out]#   ('A', (' ', 107, ' ')),
#[Out]#   ('A', (' ', 108, ' ')),
#[Out]#   ('A', (' ', 109, ' ')),
#[Out]#   ('A', (' ', 110, ' ')),
#[Out]#   ('A', (' ', 111, ' ')),
#[Out]#   ('A', (' ', 112, ' ')),
#[Out]#   ('A', (' ', 113, ' ')),
#[Out]#   ('A', (' ', 114, ' ')),
#[Out]#   ('A', (' ', 115, ' ')),
#[Out]#   ('A', (' ', 116, ' ')),
#[Out]#   ('A', (' ', 117, ' ')),
#[Out]#   ('A', (' ', 118, ' ')),
#[Out]#   ('A', (' ', 119, ' ')),
#[Out]#   ('A', (' ', 120, ' ')),
#[Out]#   ('A', (' ', 121, ' ')),
#[Out]#   ('A', (' ', 122, ' ')),
#[Out]#   ('A', (' ', 123, ' ')),
#[Out]#   ('A', (' ', 124, ' ')),
#[Out]#   ('A', (' ', 125, ' ')),
#[Out]#   ('A', (' ', 126, ' ')),
#[Out]#   ('A', (' ', 127, ' ')),
#[Out]#   ('A', (' ', 128, ' ')),
#[Out]#   ('A', (' ', 129, ' ')),
#[Out]#   ('A', (' ', 130, ' ')),
#[Out]#   ('A', (' ', 131, ' ')),
#[Out]#   ('A', (' ', 132, ' ')),
#[Out]#   ('A', (' ', 133, ' ')),
#[Out]#   ('A', (' ', 134, ' ')),
#[Out]#   ('A', (' ', 135, ' ')),
#[Out]#   ('A', (' ', 136, ' ')),
#[Out]#   ('A', (' ', 137, ' ')),
#[Out]#   ('A', (' ', 138, ' ')),
#[Out]#   ('A', (' ', 139, ' ')),
#[Out]#   ('A', (' ', 140, ' ')),
#[Out]#   ('A', (' ', 141, ' ')),
#[Out]#   ('A', (' ', 142, ' ')),
#[Out]#   ('A', (' ', 143, ' ')),
#[Out]#   ('A', (' ', 144, ' ')),
#[Out]#   ('A', (' ', 145, ' ')),
#[Out]#   ('A', (' ', 146, ' ')),
#[Out]#   ('A', (' ', 147, ' ')),
#[Out]#   ('A', (' ', 148, ' ')),
#[Out]#   ('A', (' ', 149, ' ')),
#[Out]#   ('A', (' ', 150, ' ')),
#[Out]#   ('A', (' ', 151, ' ')),
#[Out]#   ('A', (' ', 152, ' ')),
#[Out]#   ('A', (' ', 153, ' ')),
#[Out]#   ('A', (' ', 154, ' ')),
#[Out]#   ('A', (' ', 155, ' ')),
#[Out]#   ('A', (' ', 156, ' ')),
#[Out]#   ('A', (' ', 157, ' ')),
#[Out]#   ('A', (' ', 158, ' ')),
#[Out]#   ('A', (' ', 159, ' ')),
#[Out]#   ('A', (' ', 160, ' ')),
#[Out]#   ('A', (' ', 161, ' ')),
#[Out]#   ('A', (' ', 162, ' ')),
#[Out]#   ('A', (' ', 163, ' ')),
#[Out]#   ('A', (' ', 164, ' ')),
#[Out]#   ('A', (' ', 165, ' ')),
#[Out]#   ('A', (' ', 166, ' ')),
#[Out]#   ('A', (' ', 167, ' ')),
#[Out]#   ('A', (' ', 168, ' ')),
#[Out]#   ('A', (' ', 169, ' ')),
#[Out]#   ('A', (' ', 170, ' ')),
#[Out]#   ('A', (' ', 171, ' ')),
#[Out]#   ('A', (' ', 172, ' ')),
#[Out]#   ('A', (' ', 173, ' ')),
#[Out]#   ('A', (' ', 174, ' ')),
#[Out]#   ('A', (' ', 175, ' ')),
#[Out]#   ('A', (' ', 176, ' ')),
#[Out]#   ('A', (' ', 177, ' ')),
#[Out]#   ('A', (' ', 178, ' ')),
#[Out]#   ('A', (' ', 179, ' ')),
#[Out]#   ('A', (' ', 180, ' ')),
#[Out]#   ('A', (' ', 181, ' ')),
#[Out]#   ('A', (' ', 182, ' ')),
#[Out]#   ('A', (' ', 183, ' ')),
#[Out]#   ('A', (' ', 184, ' ')),
#[Out]#   ('A', (' ', 185, ' ')),
#[Out]#   ('A', (' ', 186, ' ')),
#[Out]#   ('A', (' ', 187, ' ')),
#[Out]#   ('A', (' ', 188, ' ')),
#[Out]#   ('A', (' ', 189, ' ')),
#[Out]#   ('A', (' ', 190, ' ')),
#[Out]#   ('A', (' ', 191, ' ')),
#[Out]#   ('A', (' ', 192, ' ')),
#[Out]#   ('A', (' ', 193, ' ')),
#[Out]#   ('A', (' ', 194, ' ')),
#[Out]#   ('A', (' ', 195, ' ')),
#[Out]#   ('A', (' ', 196, ' ')),
#[Out]#   ('A', (' ', 197, ' ')),
#[Out]#   ('A', (' ', 198, ' ')),
#[Out]#   ('A', (' ', 199, ' ')),
#[Out]#   ('A', (' ', 200, ' ')),
#[Out]#   ('A', (' ', 201, ' ')),
#[Out]#   ('A', (' ', 202, ' ')),
#[Out]#   ('A', (' ', 203, ' ')),
#[Out]#   ('A', (' ', 204, ' ')),
#[Out]#   ('A', (' ', 205, ' ')),
#[Out]#   ('A', (' ', 206, ' ')),
#[Out]#   ('A', (' ', 207, ' ')),
#[Out]#   ('A', (' ', 208, ' ')),
#[Out]#   ('A', (' ', 209, ' ')),
#[Out]#   ('A', (' ', 210, ' ')),
#[Out]#   ('A', (' ', 211, ' ')),
#[Out]#   ('A', (' ', 212, ' ')),
#[Out]#   ('A', (' ', 213, ' ')),
#[Out]#   ('A', (' ', 214, ' ')),
#[Out]#   ('A', (' ', 215, ' ')),
#[Out]#   ('A', (' ', 216, ' ')),
#[Out]#   ('A', (' ', 217, ' ')),
#[Out]#   ('A', (' ', 218, ' ')),
#[Out]#   ('A', (' ', 219, ' ')),
#[Out]#   ('A', (' ', 220, ' ')),
#[Out]#   ('A', (' ', 221, ' ')),
#[Out]#   ('A', (' ', 222, ' ')),
#[Out]#   ('A', (' ', 223, ' ')),
#[Out]#   ('A', (' ', 224, ' ')),
#[Out]#   ('A', (' ', 225, ' ')),
#[Out]#   ('A', (' ', 226, ' ')),
#[Out]#   ('A', (' ', 227, ' ')),
#[Out]#   ('A', (' ', 228, ' ')),
#[Out]#   ('A', (' ', 229, ' ')),
#[Out]#   ('A', (' ', 230, ' ')),
#[Out]#   ('A', (' ', 231, ' ')),
#[Out]#   ('A', (' ', 232, ' ')),
#[Out]#   ('A', (' ', 233, ' ')),
#[Out]#   ('A', (' ', 234, ' ')),
#[Out]#   ('A', (' ', 235, ' ')),
#[Out]#   ('A', (' ', 236, ' ')),
#[Out]#   ('A', (' ', 237, ' ')),
#[Out]#   ('A', (' ', 238, ' ')),
#[Out]#   ('A', (' ', 239, ' ')),
#[Out]#   ('A', (' ', 240, ' ')),
#[Out]#   ('A', (' ', 241, ' ')),
#[Out]#   ('A', (' ', 242, ' ')),
#[Out]#   ('A', (' ', 243, ' ')),
#[Out]#   ('A', (' ', 244, ' ')),
#[Out]#   ('A', (' ', 245, ' ')),
#[Out]#   ('A', (' ', 246, ' ')),
#[Out]#   ('A', (' ', 247, ' ')),
#[Out]#   ('A', (' ', 248, ' ')),
#[Out]#   ('A', (' ', 249, ' ')),
#[Out]#   ('A', (' ', 250, ' ')),
#[Out]#   ('A', (' ', 251, ' ')),
#[Out]#   ('A', (' ', 252, ' ')),
#[Out]#   ('A', (' ', 253, ' ')),
#[Out]#   ('A', (' ', 254, ' ')),
#[Out]#   ('A', (' ', 255, ' ')),
#[Out]#   ('A', (' ', 256, ' ')),
#[Out]#   ('A', (' ', 257, ' ')),
#[Out]#   ('A', (' ', 258, ' ')),
#[Out]#   ('A', (' ', 259, ' ')),
#[Out]#   ('A', (' ', 260, ' ')),
#[Out]#   ('A', (' ', 261, ' ')),
#[Out]#   ('A', (' ', 262, ' ')),
#[Out]#   ('A', (' ', 263, ' ')),
#[Out]#   ('A', (' ', 264, ' ')),
#[Out]#   ('A', (' ', 265, ' ')),
#[Out]#   ('A', (' ', 266, ' ')),
#[Out]#   ('A', (' ', 267, ' ')),
#[Out]#   ('A', (' ', 268, ' ')),
#[Out]#   ('A', (' ', 269, ' ')),
#[Out]#   ('A', (' ', 270, ' ')),
#[Out]#   ('A', (' ', 271, ' ')),
#[Out]#   ('A', (' ', 272, ' ')),
#[Out]#   ('A', (' ', 273, ' ')),
#[Out]#   ('A', (' ', 274, ' ')),
#[Out]#   ('A', (' ', 275, ' ')),
#[Out]#   ('A', (' ', 276, ' ')),
#[Out]#   ('A', (' ', 277, ' ')),
#[Out]#   ('A', (' ', 278, ' ')),
#[Out]#   ('A', (' ', 279, ' ')),
#[Out]#   ('A', (' ', 280, ' ')),
#[Out]#   ('A', (' ', 281, ' ')),
#[Out]#   ('A', (' ', 282, ' ')),
#[Out]#   ('A', (' ', 283, ' ')),
#[Out]#   ('A', (' ', 284, ' ')),
#[Out]#   ('A', (' ', 285, ' ')),
#[Out]#   ('A', (' ', 286, ' ')),
#[Out]#   ('A', (' ', 287, ' ')),
#[Out]#   ('A', (' ', 288, ' ')),
#[Out]#   ('A', (' ', 289, ' '))])
len(dssp_dict)
#[Out]# 2
dssp_dict.keys()
dict(dssp_dict).keys()
dssp_dict = DSSP_win.dssp_dict_from_pdb_file('structures/aligned_3PRN.pdb')[0]
dssp_dict.keys()
#[Out]# [('A', (' ', 98, ' ')),
#[Out]#  ('A', (' ', 101, ' ')),
#[Out]#  ('A', (' ', 212, ' ')),
#[Out]#  ('A', (' ', 255, ' ')),
#[Out]#  ('A', (' ', 33, ' ')),
#[Out]#  ('A', (' ', 246, ' ')),
#[Out]#  ('A', (' ', 24, ' ')),
#[Out]#  ('A', (' ', 210, ' ')),
#[Out]#  ('A', (' ', 196, ' ')),
#[Out]#  ('A', (' ', 175, ' ')),
#[Out]#  ('A', (' ', 209, ' ')),
#[Out]#  ('A', (' ', 39, ' ')),
#[Out]#  ('A', (' ', 166, ' ')),
#[Out]#  ('A', (' ', 200, ' ')),
#[Out]#  ('A', (' ', 69, ' ')),
#[Out]#  ('A', (' ', 52, ' ')),
#[Out]#  ('A', (' ', 223, ' ')),
#[Out]#  ('A', (' ', 94, ' ')),
#[Out]#  ('A', (' ', 129, ' ')),
#[Out]#  ('A', (' ', 64, ' ')),
#[Out]#  ('A', (' ', 26, ' ')),
#[Out]#  ('A', (' ', 23, ' ')),
#[Out]#  ('A', (' ', 120, ' ')),
#[Out]#  ('A', (' ', 178, ' ')),
#[Out]#  ('A', (' ', 245, ' ')),
#[Out]#  ('A', (' ', 164, ' ')),
#[Out]#  ('A', (' ', 143, ' ')),
#[Out]#  ('A', (' ', 78, ' ')),
#[Out]#  ('A', (' ', 177, ' ')),
#[Out]#  ('A', (' ', 91, ' ')),
#[Out]#  ('A', (' ', 138, ' ')),
#[Out]#  ('A', (' ', 7, ' ')),
#[Out]#  ('A', (' ', 40, ' ')),
#[Out]#  ('A', (' ', 275, ' ')),
#[Out]#  ('A', (' ', 162, ' ')),
#[Out]#  ('A', (' ', 165, ' ')),
#[Out]#  ('A', (' ', 276, ' ')),
#[Out]#  ('A', (' ', 203, ' ')),
#[Out]#  ('A', (' ', 250, ' ')),
#[Out]#  ('A', (' ', 61, ' ')),
#[Out]#  ('A', (' ', 247, ' ')),
#[Out]#  ('A', (' ', 274, ' ')),
#[Out]#  ('A', (' ', 213, ' ')),
#[Out]#  ('A', (' ', 260, ' ')),
#[Out]#  ('A', (' ', 46, ' ')),
#[Out]#  ('A', (' ', 273, ' ')),
#[Out]#  ('A', (' ', 16, ' ')),
#[Out]#  ('A', (' ', 59, ' ')),
#[Out]#  ('A', (' ', 234, ' ')),
#[Out]#  ('A', (' ', 237, ' ')),
#[Out]#  ('A', (' ', 264, ' ')),
#[Out]#  ('A', (' ', 115, ' ')),
#[Out]#  ('A', (' ', 133, ' ')),
#[Out]#  ('A', (' ', 287, ' ')),
#[Out]#  ('A', (' ', 158, ' ')),
#[Out]#  ('A', (' ', 128, ' ')),
#[Out]#  ('A', (' ', 43, ' ')),
#[Out]#  ('A', (' ', 29, ' ')),
#[Out]#  ('A', (' ', 108, ' ')),
#[Out]#  ('A', (' ', 22, ' ')),
#[Out]#  ('A', (' ', 121, ' ')),
#[Out]#  ('A', (' ', 184, ' ')),
#[Out]#  ('A', (' ', 99, ' ')),
#[Out]#  ('A', (' ', 142, ' ')),
#[Out]#  ('A', (' ', 240, ' ')),
#[Out]#  ('A', (' ', 155, ' ')),
#[Out]#  ('A', (' ', 205, ' ')),
#[Out]#  ('A', (' ', 28, ' ')),
#[Out]#  ('A', (' ', 198, ' ')),
#[Out]#  ('A', (' ', 233, ' ')),
#[Out]#  ('A', (' ', 83, ' ')),
#[Out]#  ('A', (' ', 84, ' ')),
#[Out]#  ('A', (' ', 127, ' ')),
#[Out]#  ('A', (' ', 254, ' ')),
#[Out]#  ('A', (' ', 224, ' ')),
#[Out]#  ('A', (' ', 267, ' ')),
#[Out]#  ('A', (' ', 204, ' ')),
#[Out]#  ('A', (' ', 118, ' ')),
#[Out]#  ('A', (' ', 217, ' ')),
#[Out]#  ('A', (' ', 195, ' ')),
#[Out]#  ('A', (' ', 82, ' ')),
#[Out]#  ('A', (' ', 277, ' ')),
#[Out]#  ('A', (' ', 68, ' ')),
#[Out]#  ('A', (' ', 47, ' ')),
#[Out]#  ('A', (' ', 81, ' ')),
#[Out]#  ('A', (' ', 252, ' ')),
#[Out]#  ('A', (' ', 38, ' ')),
#[Out]#  ('A', (' ', 201, ' ')),
#[Out]#  ('A', (' ', 72, ' ')),
#[Out]#  ('A', (' ', 179, ' ')),
#[Out]#  ('A', (' ', 194, ' ')),
#[Out]#  ('A', (' ', 95, ' ')),
#[Out]#  ('A', (' ', 1, ' ')),
#[Out]#  ('A', (' ', 172, ' ')),
#[Out]#  ('A', (' ', 185, ' ')),
#[Out]#  ('A', (' ', 163, ' ')),
#[Out]#  ('A', (' ', 50, ' ')),
#[Out]#  ('A', (' ', 117, ' ')),
#[Out]#  ('A', (' ', 36, ' ')),
#[Out]#  ('A', (' ', 15, ' ')),
#[Out]#  ('A', (' ', 49, ' ')),
#[Out]#  ('A', (' ', 10, ' ')),
#[Out]#  ('A', (' ', 269, ' ')),
#[Out]#  ('A', (' ', 262, ' ')),
#[Out]#  ('A', (' ', 147, ' ')),
#[Out]#  ('A', (' ', 34, ' ')),
#[Out]#  ('A', (' ', 37, ' ')),
#[Out]#  ('A', (' ', 148, ' ')),
#[Out]#  ('A', (' ', 191, ' ')),
#[Out]#  ('A', (' ', 225, ' ')),
#[Out]#  ('A', (' ', 288, ' ')),
#[Out]#  ('A', (' ', 75, ' ')),
#[Out]#  ('A', (' ', 122, ' ')),
#[Out]#  ('A', (' ', 268, ' ')),
#[Out]#  ('A', (' ', 119, ' ')),
#[Out]#  ('A', (' ', 182, ' ')),
#[Out]#  ('A', (' ', 281, ' ')),
#[Out]#  ('A', (' ', 216, ' ')),
#[Out]#  ('A', (' ', 259, ' ')),
#[Out]#  ('A', (' ', 146, ' ')),
#[Out]#  ('A', (' ', 85, ' ')),
#[Out]#  ('A', (' ', 132, ' ')),
#[Out]#  ('A', (' ', 145, ' ')),
#[Out]#  ('A', (' ', 106, ' ')),
#[Out]#  ('A', (' ', 109, ' ')),
#[Out]#  ('A', (' ', 231, ' ')),
#[Out]#  ('A', (' ', 265, ' ')),
#[Out]#  ('A', (' ', 136, ' ')),
#[Out]#  ('A', (' ', 258, ' ')),
#[Out]#  ('A', (' ', 5, ' ')),
#[Out]#  ('A', (' ', 244, ' ')),
#[Out]#  ('A', (' ', 159, ' ')),
#[Out]#  ('A', (' ', 30, ' ')),
#[Out]#  ('A', (' ', 218, ' ')),
#[Out]#  ('A', (' ', 215, ' ')),
#[Out]#  ('A', (' ', 56, ' ')),
#[Out]#  ('A', (' ', 181, ' ')),
#[Out]#  ('A', (' ', 14, ' ')),
#[Out]#  ('A', (' ', 112, ' ')),
#[Out]#  ('A', (' ', 27, ' ')),
#[Out]#  ('A', (' ', 77, ' ')),
#[Out]#  ('A', (' ', 199, ' ')),
#[Out]#  ('A', (' ', 70, ' ')),
#[Out]#  ('A', (' ', 105, ' ')),
#[Out]#  ('A', (' ', 232, ' ')),
#[Out]#  ('A', (' ', 126, ' ')),
#[Out]#  ('A', (' ', 289, ' ')),
#[Out]#  ('A', (' ', 96, ' ')),
#[Out]#  ('A', (' ', 139, ' ')),
#[Out]#  ('A', (' ', 186, ' ')),
#[Out]#  ('A', (' ', 253, ' ')),
#[Out]#  ('A', (' ', 76, ' ')),
#[Out]#  ('A', (' ', 183, ' ')),
#[Out]#  ('A', (' ', 89, ' ')),
#[Out]#  ('A', (' ', 280, ' ')),
#[Out]#  ('A', (' ', 67, ' ')),
#[Out]#  ('A', (' ', 149, ' ')),
#[Out]#  ('A', (' ', 238, ' ')),
#[Out]#  ('A', (' ', 208, ' ')),
#[Out]#  ('A', (' ', 251, ' ')),
#[Out]#  ('A', (' ', 170, ' ')),
#[Out]#  ('A', (' ', 173, ' ')),
#[Out]#  ('A', (' ', 124, ' ')),
#[Out]#  ('A', (' ', 73, ' ')),
#[Out]#  ('A', (' ', 51, ' ')),
#[Out]#  ('A', (' ', 66, ' ')),
#[Out]#  ('A', (' ', 235, ' ')),
#[Out]#  ('A', (' ', 282, ' ')),
#[Out]#  ('A', (' ', 221, ' ')),
#[Out]#  ('A', (' ', 44, ' ')),
#[Out]#  ('A', (' ', 279, ' ')),
#[Out]#  ('A', (' ', 214, ' ')),
#[Out]#  ('A', (' ', 57, ' ')),
#[Out]#  ('A', (' ', 35, ' ')),
#[Out]#  ('A', (' ', 176, ' ')),
#[Out]#  ('A', (' ', 141, ' ')),
#[Out]#  ('A', (' ', 220, ' ')),
#[Out]#  ('A', (' ', 263, ' ')),
#[Out]#  ('A', (' ', 134, ' ')),
#[Out]#  ('A', (' ', 169, ' ')),
#[Out]#  ('A', (' ', 19, ' ')),
#[Out]#  ('A', (' ', 20, ' ')),
#[Out]#  ('A', (' ', 63, ' ')),
#[Out]#  ('A', (' ', 190, ' ')),
#[Out]#  ('A', (' ', 97, ' ')),
#[Out]#  ('A', (' ', 160, ' ')),
#[Out]#  ('A', (' ', 140, ' ')),
#[Out]#  ('A', (' ', 54, ' ')),
#[Out]#  ('A', (' ', 153, ' ')),
#[Out]#  ('A', (' ', 88, ' ')),
#[Out]#  ('A', (' ', 131, ' ')),
#[Out]#  ('A', (' ', 18, ' ')),
#[Out]#  ('A', (' ', 4, ' ')),
#[Out]#  ('A', (' ', 239, ' ')),
#[Out]#  ('A', (' ', 17, ' ')),
#[Out]#  ('A', (' ', 272, ' ')),
#[Out]#  ('A', (' ', 188, ' ')),
#[Out]#  ('A', (' ', 103, ' ')),
#[Out]#  ('A', (' ', 230, ' ')),
#[Out]#  ('A', (' ', 137, ' ')),
#[Out]#  ('A', (' ', 8, ' ')),
#[Out]#  ('A', (' ', 130, ' ')),
#[Out]#  ('A', (' ', 116, ' ')),
#[Out]#  ('A', (' ', 31, ' ')),
#[Out]#  ('A', (' ', 193, ' ')),
#[Out]#  ('A', (' ', 90, ' ')),
#[Out]#  ('A', (' ', 285, ' ')),
#[Out]#  ('A', (' ', 87, ' ')),
#[Out]#  ('A', (' ', 278, ' ')),
#[Out]#  ('A', (' ', 242, ' ')),
#[Out]#  ('A', (' ', 53, ' ')),
#[Out]#  ('A', (' ', 228, ' ')),
#[Out]#  ('A', (' ', 207, ' ')),
#[Out]#  ('A', (' ', 241, ' ')),
#[Out]#  ('A', (' ', 202, ' ')),
#[Out]#  ('A', (' ', 284, ' ')),
#[Out]#  ('A', (' ', 71, ' ')),
#[Out]#  ('A', (' ', 104, ' ')),
#[Out]#  ('A', (' ', 226, ' ')),
#[Out]#  ('A', (' ', 229, ' ')),
#[Out]#  ('A', (' ', 161, ' ')),
#[Out]#  ('A', (' ', 11, ' ')),
#[Out]#  ('A', (' ', 58, ' ')),
#[Out]#  ('A', (' ', 125, ' ')),
#[Out]#  ('A', (' ', 55, ' ')),
#[Out]#  ('A', (' ', 152, ' ')),
#[Out]#  ('A', (' ', 21, ' ')),
#[Out]#  ('A', (' ', 110, ' ')),
#[Out]#  ('A', (' ', 80, ' ')),
#[Out]#  ('A', (' ', 123, ' ')),
#[Out]#  ('A', (' ', 42, ' ')),
#[Out]#  ('A', (' ', 45, ' ')),
#[Out]#  ('A', (' ', 167, ' ')),
#[Out]#  ('A', (' ', 197, ' ')),
#[Out]#  ('A', (' ', 180, ' ')),
#[Out]#  ('A', (' ', 222, ' ')),
#[Out]#  ('A', (' ', 257, ' ')),
#[Out]#  ('A', (' ', 192, ' ')),
#[Out]#  ('A', (' ', 107, ' ')),
#[Out]#  ('A', (' ', 154, ' ')),
#[Out]#  ('A', (' ', 93, ' ')),
#[Out]#  ('A', (' ', 151, ' ')),
#[Out]#  ('A', (' ', 86, ' ')),
#[Out]#  ('A', (' ', 248, ' ')),
#[Out]#  ('A', (' ', 271, ' ')),
#[Out]#  ('A', (' ', 206, ' ')),
#[Out]#  ('A', (' ', 48, ' ')),
#[Out]#  ('A', (' ', 219, ' ')),
#[Out]#  ('A', (' ', 266, ' ')),
#[Out]#  ('A', (' ', 13, ' ')),
#[Out]#  ('A', (' ', 92, ' ')),
#[Out]#  ('A', (' ', 135, ' ')),
#[Out]#  ('A', (' ', 6, ' ')),
#[Out]#  ('A', (' ', 41, ' ')),
#[Out]#  ('A', (' ', 168, ' ')),
#[Out]#  ('A', (' ', 62, ' ')),
#[Out]#  ('A', (' ', 32, ' ')),
#[Out]#  ('A', (' ', 189, ' ')),
#[Out]#  ('A', (' ', 12, ' ')),
#[Out]#  ('A', (' ', 25, ' ')),
#[Out]#  ('A', (' ', 3, ' ')),
#[Out]#  ('A', (' ', 111, ' ')),
#[Out]#  ('A', (' ', 174, ' ')),
#[Out]#  ('A', (' ', 144, ' ')),
#[Out]#  ('A', (' ', 187, ' ')),
#[Out]#  ('A', (' ', 60, ' ')),
#[Out]#  ('A', (' ', 102, ' ')),
#[Out]#  ('A', (' ', 9, ' ')),
#[Out]#  ('A', (' ', 243, ' ')),
#[Out]#  ('A', (' ', 2, ' ')),
#[Out]#  ('A', (' ', 261, ' ')),
#[Out]#  ('A', (' ', 286, ' ')),
#[Out]#  ('A', (' ', 65, ' ')),
#[Out]#  ('A', (' ', 256, ' ')),
#[Out]#  ('A', (' ', 171, ' ')),
#[Out]#  ('A', (' ', 157, ' ')),
#[Out]#  ('A', (' ', 236, ' ')),
#[Out]#  ('A', (' ', 150, ' ')),
#[Out]#  ('A', (' ', 249, ' ')),
#[Out]#  ('A', (' ', 227, ' ')),
#[Out]#  ('A', (' ', 114, ' ')),
#[Out]#  ('A', (' ', 100, ' ')),
#[Out]#  ('A', (' ', 79, ' ')),
#[Out]#  ('A', (' ', 270, ' ')),
#[Out]#  ('A', (' ', 113, ' ')),
#[Out]#  ('A', (' ', 283, ' ')),
#[Out]#  ('A', (' ', 74, ' ')),
#[Out]#  ('A', (' ', 156, ' ')),
#[Out]#  ('A', (' ', 211, ' '))]
x
#[Out]# <Structure id=3PRN>
x['A']
x.child_dict
#[Out]# {0: <Model id=0>}
y = DSSP_win(x.child_dict[0], 'structures/aligned_3PRN.pdb')
y = DSSP_win.DSSP(x.child_dict[0], 'structures/aligned_3PRN.pdb')
y
#[Out]# <DSSP_win.DSSP instance at 0x045AE3A0>
y.keys()
#[Out]# [('A', (' ', 1, ' ')),
#[Out]#  ('A', (' ', 2, ' ')),
#[Out]#  ('A', (' ', 3, ' ')),
#[Out]#  ('A', (' ', 4, ' ')),
#[Out]#  ('A', (' ', 5, ' ')),
#[Out]#  ('A', (' ', 6, ' ')),
#[Out]#  ('A', (' ', 7, ' ')),
#[Out]#  ('A', (' ', 8, ' ')),
#[Out]#  ('A', (' ', 9, ' ')),
#[Out]#  ('A', (' ', 10, ' ')),
#[Out]#  ('A', (' ', 11, ' ')),
#[Out]#  ('A', (' ', 12, ' ')),
#[Out]#  ('A', (' ', 13, ' ')),
#[Out]#  ('A', (' ', 14, ' ')),
#[Out]#  ('A', (' ', 15, ' ')),
#[Out]#  ('A', (' ', 16, ' ')),
#[Out]#  ('A', (' ', 17, ' ')),
#[Out]#  ('A', (' ', 18, ' ')),
#[Out]#  ('A', (' ', 19, ' ')),
#[Out]#  ('A', (' ', 20, ' ')),
#[Out]#  ('A', (' ', 21, ' ')),
#[Out]#  ('A', (' ', 22, ' ')),
#[Out]#  ('A', (' ', 23, ' ')),
#[Out]#  ('A', (' ', 24, ' ')),
#[Out]#  ('A', (' ', 25, ' ')),
#[Out]#  ('A', (' ', 26, ' ')),
#[Out]#  ('A', (' ', 27, ' ')),
#[Out]#  ('A', (' ', 28, ' ')),
#[Out]#  ('A', (' ', 29, ' ')),
#[Out]#  ('A', (' ', 30, ' ')),
#[Out]#  ('A', (' ', 31, ' ')),
#[Out]#  ('A', (' ', 32, ' ')),
#[Out]#  ('A', (' ', 33, ' ')),
#[Out]#  ('A', (' ', 34, ' ')),
#[Out]#  ('A', (' ', 35, ' ')),
#[Out]#  ('A', (' ', 36, ' ')),
#[Out]#  ('A', (' ', 37, ' ')),
#[Out]#  ('A', (' ', 38, ' ')),
#[Out]#  ('A', (' ', 39, ' ')),
#[Out]#  ('A', (' ', 40, ' ')),
#[Out]#  ('A', (' ', 41, ' ')),
#[Out]#  ('A', (' ', 42, ' ')),
#[Out]#  ('A', (' ', 43, ' ')),
#[Out]#  ('A', (' ', 44, ' ')),
#[Out]#  ('A', (' ', 45, ' ')),
#[Out]#  ('A', (' ', 46, ' ')),
#[Out]#  ('A', (' ', 47, ' ')),
#[Out]#  ('A', (' ', 48, ' ')),
#[Out]#  ('A', (' ', 49, ' ')),
#[Out]#  ('A', (' ', 50, ' ')),
#[Out]#  ('A', (' ', 51, ' ')),
#[Out]#  ('A', (' ', 52, ' ')),
#[Out]#  ('A', (' ', 53, ' ')),
#[Out]#  ('A', (' ', 54, ' ')),
#[Out]#  ('A', (' ', 55, ' ')),
#[Out]#  ('A', (' ', 56, ' ')),
#[Out]#  ('A', (' ', 57, ' ')),
#[Out]#  ('A', (' ', 58, ' ')),
#[Out]#  ('A', (' ', 59, ' ')),
#[Out]#  ('A', (' ', 60, ' ')),
#[Out]#  ('A', (' ', 61, ' ')),
#[Out]#  ('A', (' ', 62, ' ')),
#[Out]#  ('A', (' ', 63, ' ')),
#[Out]#  ('A', (' ', 64, ' ')),
#[Out]#  ('A', (' ', 65, ' ')),
#[Out]#  ('A', (' ', 66, ' ')),
#[Out]#  ('A', (' ', 67, ' ')),
#[Out]#  ('A', (' ', 68, ' ')),
#[Out]#  ('A', (' ', 69, ' ')),
#[Out]#  ('A', (' ', 70, ' ')),
#[Out]#  ('A', (' ', 71, ' ')),
#[Out]#  ('A', (' ', 72, ' ')),
#[Out]#  ('A', (' ', 73, ' ')),
#[Out]#  ('A', (' ', 74, ' ')),
#[Out]#  ('A', (' ', 75, ' ')),
#[Out]#  ('A', (' ', 76, ' ')),
#[Out]#  ('A', (' ', 77, ' ')),
#[Out]#  ('A', (' ', 78, ' ')),
#[Out]#  ('A', (' ', 79, ' ')),
#[Out]#  ('A', (' ', 80, ' ')),
#[Out]#  ('A', (' ', 81, ' ')),
#[Out]#  ('A', (' ', 82, ' ')),
#[Out]#  ('A', (' ', 83, ' ')),
#[Out]#  ('A', (' ', 84, ' ')),
#[Out]#  ('A', (' ', 85, ' ')),
#[Out]#  ('A', (' ', 86, ' ')),
#[Out]#  ('A', (' ', 87, ' ')),
#[Out]#  ('A', (' ', 88, ' ')),
#[Out]#  ('A', (' ', 89, ' ')),
#[Out]#  ('A', (' ', 90, ' ')),
#[Out]#  ('A', (' ', 91, ' ')),
#[Out]#  ('A', (' ', 92, ' ')),
#[Out]#  ('A', (' ', 93, ' ')),
#[Out]#  ('A', (' ', 94, ' ')),
#[Out]#  ('A', (' ', 95, ' ')),
#[Out]#  ('A', (' ', 96, ' ')),
#[Out]#  ('A', (' ', 97, ' ')),
#[Out]#  ('A', (' ', 98, ' ')),
#[Out]#  ('A', (' ', 99, ' ')),
#[Out]#  ('A', (' ', 100, ' ')),
#[Out]#  ('A', (' ', 101, ' ')),
#[Out]#  ('A', (' ', 102, ' ')),
#[Out]#  ('A', (' ', 103, ' ')),
#[Out]#  ('A', (' ', 104, ' ')),
#[Out]#  ('A', (' ', 105, ' ')),
#[Out]#  ('A', (' ', 106, ' ')),
#[Out]#  ('A', (' ', 107, ' ')),
#[Out]#  ('A', (' ', 108, ' ')),
#[Out]#  ('A', (' ', 109, ' ')),
#[Out]#  ('A', (' ', 110, ' ')),
#[Out]#  ('A', (' ', 111, ' ')),
#[Out]#  ('A', (' ', 112, ' ')),
#[Out]#  ('A', (' ', 113, ' ')),
#[Out]#  ('A', (' ', 114, ' ')),
#[Out]#  ('A', (' ', 115, ' ')),
#[Out]#  ('A', (' ', 116, ' ')),
#[Out]#  ('A', (' ', 117, ' ')),
#[Out]#  ('A', (' ', 118, ' ')),
#[Out]#  ('A', (' ', 119, ' ')),
#[Out]#  ('A', (' ', 120, ' ')),
#[Out]#  ('A', (' ', 121, ' ')),
#[Out]#  ('A', (' ', 122, ' ')),
#[Out]#  ('A', (' ', 123, ' ')),
#[Out]#  ('A', (' ', 124, ' ')),
#[Out]#  ('A', (' ', 125, ' ')),
#[Out]#  ('A', (' ', 126, ' ')),
#[Out]#  ('A', (' ', 127, ' ')),
#[Out]#  ('A', (' ', 128, ' ')),
#[Out]#  ('A', (' ', 129, ' ')),
#[Out]#  ('A', (' ', 130, ' ')),
#[Out]#  ('A', (' ', 131, ' ')),
#[Out]#  ('A', (' ', 132, ' ')),
#[Out]#  ('A', (' ', 133, ' ')),
#[Out]#  ('A', (' ', 134, ' ')),
#[Out]#  ('A', (' ', 135, ' ')),
#[Out]#  ('A', (' ', 136, ' ')),
#[Out]#  ('A', (' ', 137, ' ')),
#[Out]#  ('A', (' ', 138, ' ')),
#[Out]#  ('A', (' ', 139, ' ')),
#[Out]#  ('A', (' ', 140, ' ')),
#[Out]#  ('A', (' ', 141, ' ')),
#[Out]#  ('A', (' ', 142, ' ')),
#[Out]#  ('A', (' ', 143, ' ')),
#[Out]#  ('A', (' ', 144, ' ')),
#[Out]#  ('A', (' ', 145, ' ')),
#[Out]#  ('A', (' ', 146, ' ')),
#[Out]#  ('A', (' ', 147, ' ')),
#[Out]#  ('A', (' ', 148, ' ')),
#[Out]#  ('A', (' ', 149, ' ')),
#[Out]#  ('A', (' ', 150, ' ')),
#[Out]#  ('A', (' ', 151, ' ')),
#[Out]#  ('A', (' ', 152, ' ')),
#[Out]#  ('A', (' ', 153, ' ')),
#[Out]#  ('A', (' ', 154, ' ')),
#[Out]#  ('A', (' ', 155, ' ')),
#[Out]#  ('A', (' ', 156, ' ')),
#[Out]#  ('A', (' ', 157, ' ')),
#[Out]#  ('A', (' ', 158, ' ')),
#[Out]#  ('A', (' ', 159, ' ')),
#[Out]#  ('A', (' ', 160, ' ')),
#[Out]#  ('A', (' ', 161, ' ')),
#[Out]#  ('A', (' ', 162, ' ')),
#[Out]#  ('A', (' ', 163, ' ')),
#[Out]#  ('A', (' ', 164, ' ')),
#[Out]#  ('A', (' ', 165, ' ')),
#[Out]#  ('A', (' ', 166, ' ')),
#[Out]#  ('A', (' ', 167, ' ')),
#[Out]#  ('A', (' ', 168, ' ')),
#[Out]#  ('A', (' ', 169, ' ')),
#[Out]#  ('A', (' ', 170, ' ')),
#[Out]#  ('A', (' ', 171, ' ')),
#[Out]#  ('A', (' ', 172, ' ')),
#[Out]#  ('A', (' ', 173, ' ')),
#[Out]#  ('A', (' ', 174, ' ')),
#[Out]#  ('A', (' ', 175, ' ')),
#[Out]#  ('A', (' ', 176, ' ')),
#[Out]#  ('A', (' ', 177, ' ')),
#[Out]#  ('A', (' ', 178, ' ')),
#[Out]#  ('A', (' ', 179, ' ')),
#[Out]#  ('A', (' ', 180, ' ')),
#[Out]#  ('A', (' ', 181, ' ')),
#[Out]#  ('A', (' ', 182, ' ')),
#[Out]#  ('A', (' ', 183, ' ')),
#[Out]#  ('A', (' ', 184, ' ')),
#[Out]#  ('A', (' ', 185, ' ')),
#[Out]#  ('A', (' ', 186, ' ')),
#[Out]#  ('A', (' ', 187, ' ')),
#[Out]#  ('A', (' ', 188, ' ')),
#[Out]#  ('A', (' ', 189, ' ')),
#[Out]#  ('A', (' ', 190, ' ')),
#[Out]#  ('A', (' ', 191, ' ')),
#[Out]#  ('A', (' ', 192, ' ')),
#[Out]#  ('A', (' ', 193, ' ')),
#[Out]#  ('A', (' ', 194, ' ')),
#[Out]#  ('A', (' ', 195, ' ')),
#[Out]#  ('A', (' ', 196, ' ')),
#[Out]#  ('A', (' ', 197, ' ')),
#[Out]#  ('A', (' ', 198, ' ')),
#[Out]#  ('A', (' ', 199, ' ')),
#[Out]#  ('A', (' ', 200, ' ')),
#[Out]#  ('A', (' ', 201, ' ')),
#[Out]#  ('A', (' ', 202, ' ')),
#[Out]#  ('A', (' ', 203, ' ')),
#[Out]#  ('A', (' ', 204, ' ')),
#[Out]#  ('A', (' ', 205, ' ')),
#[Out]#  ('A', (' ', 206, ' ')),
#[Out]#  ('A', (' ', 207, ' ')),
#[Out]#  ('A', (' ', 208, ' ')),
#[Out]#  ('A', (' ', 209, ' ')),
#[Out]#  ('A', (' ', 210, ' ')),
#[Out]#  ('A', (' ', 211, ' ')),
#[Out]#  ('A', (' ', 212, ' ')),
#[Out]#  ('A', (' ', 213, ' ')),
#[Out]#  ('A', (' ', 214, ' ')),
#[Out]#  ('A', (' ', 215, ' ')),
#[Out]#  ('A', (' ', 216, ' ')),
#[Out]#  ('A', (' ', 217, ' ')),
#[Out]#  ('A', (' ', 218, ' ')),
#[Out]#  ('A', (' ', 219, ' ')),
#[Out]#  ('A', (' ', 220, ' ')),
#[Out]#  ('A', (' ', 221, ' ')),
#[Out]#  ('A', (' ', 222, ' ')),
#[Out]#  ('A', (' ', 223, ' ')),
#[Out]#  ('A', (' ', 224, ' ')),
#[Out]#  ('A', (' ', 225, ' ')),
#[Out]#  ('A', (' ', 226, ' ')),
#[Out]#  ('A', (' ', 227, ' ')),
#[Out]#  ('A', (' ', 228, ' ')),
#[Out]#  ('A', (' ', 229, ' ')),
#[Out]#  ('A', (' ', 230, ' ')),
#[Out]#  ('A', (' ', 231, ' ')),
#[Out]#  ('A', (' ', 232, ' ')),
#[Out]#  ('A', (' ', 233, ' ')),
#[Out]#  ('A', (' ', 234, ' ')),
#[Out]#  ('A', (' ', 235, ' ')),
#[Out]#  ('A', (' ', 236, ' ')),
#[Out]#  ('A', (' ', 237, ' ')),
#[Out]#  ('A', (' ', 238, ' ')),
#[Out]#  ('A', (' ', 239, ' ')),
#[Out]#  ('A', (' ', 240, ' ')),
#[Out]#  ('A', (' ', 241, ' ')),
#[Out]#  ('A', (' ', 242, ' ')),
#[Out]#  ('A', (' ', 243, ' ')),
#[Out]#  ('A', (' ', 244, ' ')),
#[Out]#  ('A', (' ', 245, ' ')),
#[Out]#  ('A', (' ', 246, ' ')),
#[Out]#  ('A', (' ', 247, ' ')),
#[Out]#  ('A', (' ', 248, ' ')),
#[Out]#  ('A', (' ', 249, ' ')),
#[Out]#  ('A', (' ', 250, ' ')),
#[Out]#  ('A', (' ', 251, ' ')),
#[Out]#  ('A', (' ', 252, ' ')),
#[Out]#  ('A', (' ', 253, ' ')),
#[Out]#  ('A', (' ', 254, ' ')),
#[Out]#  ('A', (' ', 255, ' ')),
#[Out]#  ('A', (' ', 256, ' ')),
#[Out]#  ('A', (' ', 257, ' ')),
#[Out]#  ('A', (' ', 258, ' ')),
#[Out]#  ('A', (' ', 259, ' ')),
#[Out]#  ('A', (' ', 260, ' ')),
#[Out]#  ('A', (' ', 261, ' ')),
#[Out]#  ('A', (' ', 262, ' ')),
#[Out]#  ('A', (' ', 263, ' ')),
#[Out]#  ('A', (' ', 264, ' ')),
#[Out]#  ('A', (' ', 265, ' ')),
#[Out]#  ('A', (' ', 266, ' ')),
#[Out]#  ('A', (' ', 267, ' ')),
#[Out]#  ('A', (' ', 268, ' ')),
#[Out]#  ('A', (' ', 269, ' ')),
#[Out]#  ('A', (' ', 270, ' ')),
#[Out]#  ('A', (' ', 271, ' ')),
#[Out]#  ('A', (' ', 272, ' ')),
#[Out]#  ('A', (' ', 273, ' ')),
#[Out]#  ('A', (' ', 274, ' ')),
#[Out]#  ('A', (' ', 275, ' ')),
#[Out]#  ('A', (' ', 276, ' ')),
#[Out]#  ('A', (' ', 277, ' ')),
#[Out]#  ('A', (' ', 278, ' ')),
#[Out]#  ('A', (' ', 279, ' ')),
#[Out]#  ('A', (' ', 280, ' ')),
#[Out]#  ('A', (' ', 281, ' ')),
#[Out]#  ('A', (' ', 282, ' ')),
#[Out]#  ('A', (' ', 283, ' ')),
#[Out]#  ('A', (' ', 284, ' ')),
#[Out]#  ('A', (' ', 285, ' ')),
#[Out]#  ('A', (' ', 286, ' ')),
#[Out]#  ('A', (' ', 287, ' ')),
#[Out]#  ('A', (' ', 288, ' ')),
#[Out]#  ('A', (' ', 289, ' '))]
test_res = x.get_residues().next()
rest_res
test_res
#[Out]# <Residue MET het=  resseq=1 icode= >
y[test_res]
y.keys()
#[Out]# [('A', (' ', 1, ' ')),
#[Out]#  ('A', (' ', 2, ' ')),
#[Out]#  ('A', (' ', 3, ' ')),
#[Out]#  ('A', (' ', 4, ' ')),
#[Out]#  ('A', (' ', 5, ' ')),
#[Out]#  ('A', (' ', 6, ' ')),
#[Out]#  ('A', (' ', 7, ' ')),
#[Out]#  ('A', (' ', 8, ' ')),
#[Out]#  ('A', (' ', 9, ' ')),
#[Out]#  ('A', (' ', 10, ' ')),
#[Out]#  ('A', (' ', 11, ' ')),
#[Out]#  ('A', (' ', 12, ' ')),
#[Out]#  ('A', (' ', 13, ' ')),
#[Out]#  ('A', (' ', 14, ' ')),
#[Out]#  ('A', (' ', 15, ' ')),
#[Out]#  ('A', (' ', 16, ' ')),
#[Out]#  ('A', (' ', 17, ' ')),
#[Out]#  ('A', (' ', 18, ' ')),
#[Out]#  ('A', (' ', 19, ' ')),
#[Out]#  ('A', (' ', 20, ' ')),
#[Out]#  ('A', (' ', 21, ' ')),
#[Out]#  ('A', (' ', 22, ' ')),
#[Out]#  ('A', (' ', 23, ' ')),
#[Out]#  ('A', (' ', 24, ' ')),
#[Out]#  ('A', (' ', 25, ' ')),
#[Out]#  ('A', (' ', 26, ' ')),
#[Out]#  ('A', (' ', 27, ' ')),
#[Out]#  ('A', (' ', 28, ' ')),
#[Out]#  ('A', (' ', 29, ' ')),
#[Out]#  ('A', (' ', 30, ' ')),
#[Out]#  ('A', (' ', 31, ' ')),
#[Out]#  ('A', (' ', 32, ' ')),
#[Out]#  ('A', (' ', 33, ' ')),
#[Out]#  ('A', (' ', 34, ' ')),
#[Out]#  ('A', (' ', 35, ' ')),
#[Out]#  ('A', (' ', 36, ' ')),
#[Out]#  ('A', (' ', 37, ' ')),
#[Out]#  ('A', (' ', 38, ' ')),
#[Out]#  ('A', (' ', 39, ' ')),
#[Out]#  ('A', (' ', 40, ' ')),
#[Out]#  ('A', (' ', 41, ' ')),
#[Out]#  ('A', (' ', 42, ' ')),
#[Out]#  ('A', (' ', 43, ' ')),
#[Out]#  ('A', (' ', 44, ' ')),
#[Out]#  ('A', (' ', 45, ' ')),
#[Out]#  ('A', (' ', 46, ' ')),
#[Out]#  ('A', (' ', 47, ' ')),
#[Out]#  ('A', (' ', 48, ' ')),
#[Out]#  ('A', (' ', 49, ' ')),
#[Out]#  ('A', (' ', 50, ' ')),
#[Out]#  ('A', (' ', 51, ' ')),
#[Out]#  ('A', (' ', 52, ' ')),
#[Out]#  ('A', (' ', 53, ' ')),
#[Out]#  ('A', (' ', 54, ' ')),
#[Out]#  ('A', (' ', 55, ' ')),
#[Out]#  ('A', (' ', 56, ' ')),
#[Out]#  ('A', (' ', 57, ' ')),
#[Out]#  ('A', (' ', 58, ' ')),
#[Out]#  ('A', (' ', 59, ' ')),
#[Out]#  ('A', (' ', 60, ' ')),
#[Out]#  ('A', (' ', 61, ' ')),
#[Out]#  ('A', (' ', 62, ' ')),
#[Out]#  ('A', (' ', 63, ' ')),
#[Out]#  ('A', (' ', 64, ' ')),
#[Out]#  ('A', (' ', 65, ' ')),
#[Out]#  ('A', (' ', 66, ' ')),
#[Out]#  ('A', (' ', 67, ' ')),
#[Out]#  ('A', (' ', 68, ' ')),
#[Out]#  ('A', (' ', 69, ' ')),
#[Out]#  ('A', (' ', 70, ' ')),
#[Out]#  ('A', (' ', 71, ' ')),
#[Out]#  ('A', (' ', 72, ' ')),
#[Out]#  ('A', (' ', 73, ' ')),
#[Out]#  ('A', (' ', 74, ' ')),
#[Out]#  ('A', (' ', 75, ' ')),
#[Out]#  ('A', (' ', 76, ' ')),
#[Out]#  ('A', (' ', 77, ' ')),
#[Out]#  ('A', (' ', 78, ' ')),
#[Out]#  ('A', (' ', 79, ' ')),
#[Out]#  ('A', (' ', 80, ' ')),
#[Out]#  ('A', (' ', 81, ' ')),
#[Out]#  ('A', (' ', 82, ' ')),
#[Out]#  ('A', (' ', 83, ' ')),
#[Out]#  ('A', (' ', 84, ' ')),
#[Out]#  ('A', (' ', 85, ' ')),
#[Out]#  ('A', (' ', 86, ' ')),
#[Out]#  ('A', (' ', 87, ' ')),
#[Out]#  ('A', (' ', 88, ' ')),
#[Out]#  ('A', (' ', 89, ' ')),
#[Out]#  ('A', (' ', 90, ' ')),
#[Out]#  ('A', (' ', 91, ' ')),
#[Out]#  ('A', (' ', 92, ' ')),
#[Out]#  ('A', (' ', 93, ' ')),
#[Out]#  ('A', (' ', 94, ' ')),
#[Out]#  ('A', (' ', 95, ' ')),
#[Out]#  ('A', (' ', 96, ' ')),
#[Out]#  ('A', (' ', 97, ' ')),
#[Out]#  ('A', (' ', 98, ' ')),
#[Out]#  ('A', (' ', 99, ' ')),
#[Out]#  ('A', (' ', 100, ' ')),
#[Out]#  ('A', (' ', 101, ' ')),
#[Out]#  ('A', (' ', 102, ' ')),
#[Out]#  ('A', (' ', 103, ' ')),
#[Out]#  ('A', (' ', 104, ' ')),
#[Out]#  ('A', (' ', 105, ' ')),
#[Out]#  ('A', (' ', 106, ' ')),
#[Out]#  ('A', (' ', 107, ' ')),
#[Out]#  ('A', (' ', 108, ' ')),
#[Out]#  ('A', (' ', 109, ' ')),
#[Out]#  ('A', (' ', 110, ' ')),
#[Out]#  ('A', (' ', 111, ' ')),
#[Out]#  ('A', (' ', 112, ' ')),
#[Out]#  ('A', (' ', 113, ' ')),
#[Out]#  ('A', (' ', 114, ' ')),
#[Out]#  ('A', (' ', 115, ' ')),
#[Out]#  ('A', (' ', 116, ' ')),
#[Out]#  ('A', (' ', 117, ' ')),
#[Out]#  ('A', (' ', 118, ' ')),
#[Out]#  ('A', (' ', 119, ' ')),
#[Out]#  ('A', (' ', 120, ' ')),
#[Out]#  ('A', (' ', 121, ' ')),
#[Out]#  ('A', (' ', 122, ' ')),
#[Out]#  ('A', (' ', 123, ' ')),
#[Out]#  ('A', (' ', 124, ' ')),
#[Out]#  ('A', (' ', 125, ' ')),
#[Out]#  ('A', (' ', 126, ' ')),
#[Out]#  ('A', (' ', 127, ' ')),
#[Out]#  ('A', (' ', 128, ' ')),
#[Out]#  ('A', (' ', 129, ' ')),
#[Out]#  ('A', (' ', 130, ' ')),
#[Out]#  ('A', (' ', 131, ' ')),
#[Out]#  ('A', (' ', 132, ' ')),
#[Out]#  ('A', (' ', 133, ' ')),
#[Out]#  ('A', (' ', 134, ' ')),
#[Out]#  ('A', (' ', 135, ' ')),
#[Out]#  ('A', (' ', 136, ' ')),
#[Out]#  ('A', (' ', 137, ' ')),
#[Out]#  ('A', (' ', 138, ' ')),
#[Out]#  ('A', (' ', 139, ' ')),
#[Out]#  ('A', (' ', 140, ' ')),
#[Out]#  ('A', (' ', 141, ' ')),
#[Out]#  ('A', (' ', 142, ' ')),
#[Out]#  ('A', (' ', 143, ' ')),
#[Out]#  ('A', (' ', 144, ' ')),
#[Out]#  ('A', (' ', 145, ' ')),
#[Out]#  ('A', (' ', 146, ' ')),
#[Out]#  ('A', (' ', 147, ' ')),
#[Out]#  ('A', (' ', 148, ' ')),
#[Out]#  ('A', (' ', 149, ' ')),
#[Out]#  ('A', (' ', 150, ' ')),
#[Out]#  ('A', (' ', 151, ' ')),
#[Out]#  ('A', (' ', 152, ' ')),
#[Out]#  ('A', (' ', 153, ' ')),
#[Out]#  ('A', (' ', 154, ' ')),
#[Out]#  ('A', (' ', 155, ' ')),
#[Out]#  ('A', (' ', 156, ' ')),
#[Out]#  ('A', (' ', 157, ' ')),
#[Out]#  ('A', (' ', 158, ' ')),
#[Out]#  ('A', (' ', 159, ' ')),
#[Out]#  ('A', (' ', 160, ' ')),
#[Out]#  ('A', (' ', 161, ' ')),
#[Out]#  ('A', (' ', 162, ' ')),
#[Out]#  ('A', (' ', 163, ' ')),
#[Out]#  ('A', (' ', 164, ' ')),
#[Out]#  ('A', (' ', 165, ' ')),
#[Out]#  ('A', (' ', 166, ' ')),
#[Out]#  ('A', (' ', 167, ' ')),
#[Out]#  ('A', (' ', 168, ' ')),
#[Out]#  ('A', (' ', 169, ' ')),
#[Out]#  ('A', (' ', 170, ' ')),
#[Out]#  ('A', (' ', 171, ' ')),
#[Out]#  ('A', (' ', 172, ' ')),
#[Out]#  ('A', (' ', 173, ' ')),
#[Out]#  ('A', (' ', 174, ' ')),
#[Out]#  ('A', (' ', 175, ' ')),
#[Out]#  ('A', (' ', 176, ' ')),
#[Out]#  ('A', (' ', 177, ' ')),
#[Out]#  ('A', (' ', 178, ' ')),
#[Out]#  ('A', (' ', 179, ' ')),
#[Out]#  ('A', (' ', 180, ' ')),
#[Out]#  ('A', (' ', 181, ' ')),
#[Out]#  ('A', (' ', 182, ' ')),
#[Out]#  ('A', (' ', 183, ' ')),
#[Out]#  ('A', (' ', 184, ' ')),
#[Out]#  ('A', (' ', 185, ' ')),
#[Out]#  ('A', (' ', 186, ' ')),
#[Out]#  ('A', (' ', 187, ' ')),
#[Out]#  ('A', (' ', 188, ' ')),
#[Out]#  ('A', (' ', 189, ' ')),
#[Out]#  ('A', (' ', 190, ' ')),
#[Out]#  ('A', (' ', 191, ' ')),
#[Out]#  ('A', (' ', 192, ' ')),
#[Out]#  ('A', (' ', 193, ' ')),
#[Out]#  ('A', (' ', 194, ' ')),
#[Out]#  ('A', (' ', 195, ' ')),
#[Out]#  ('A', (' ', 196, ' ')),
#[Out]#  ('A', (' ', 197, ' ')),
#[Out]#  ('A', (' ', 198, ' ')),
#[Out]#  ('A', (' ', 199, ' ')),
#[Out]#  ('A', (' ', 200, ' ')),
#[Out]#  ('A', (' ', 201, ' ')),
#[Out]#  ('A', (' ', 202, ' ')),
#[Out]#  ('A', (' ', 203, ' ')),
#[Out]#  ('A', (' ', 204, ' ')),
#[Out]#  ('A', (' ', 205, ' ')),
#[Out]#  ('A', (' ', 206, ' ')),
#[Out]#  ('A', (' ', 207, ' ')),
#[Out]#  ('A', (' ', 208, ' ')),
#[Out]#  ('A', (' ', 209, ' ')),
#[Out]#  ('A', (' ', 210, ' ')),
#[Out]#  ('A', (' ', 211, ' ')),
#[Out]#  ('A', (' ', 212, ' ')),
#[Out]#  ('A', (' ', 213, ' ')),
#[Out]#  ('A', (' ', 214, ' ')),
#[Out]#  ('A', (' ', 215, ' ')),
#[Out]#  ('A', (' ', 216, ' ')),
#[Out]#  ('A', (' ', 217, ' ')),
#[Out]#  ('A', (' ', 218, ' ')),
#[Out]#  ('A', (' ', 219, ' ')),
#[Out]#  ('A', (' ', 220, ' ')),
#[Out]#  ('A', (' ', 221, ' ')),
#[Out]#  ('A', (' ', 222, ' ')),
#[Out]#  ('A', (' ', 223, ' ')),
#[Out]#  ('A', (' ', 224, ' ')),
#[Out]#  ('A', (' ', 225, ' ')),
#[Out]#  ('A', (' ', 226, ' ')),
#[Out]#  ('A', (' ', 227, ' ')),
#[Out]#  ('A', (' ', 228, ' ')),
#[Out]#  ('A', (' ', 229, ' ')),
#[Out]#  ('A', (' ', 230, ' ')),
#[Out]#  ('A', (' ', 231, ' ')),
#[Out]#  ('A', (' ', 232, ' ')),
#[Out]#  ('A', (' ', 233, ' ')),
#[Out]#  ('A', (' ', 234, ' ')),
#[Out]#  ('A', (' ', 235, ' ')),
#[Out]#  ('A', (' ', 236, ' ')),
#[Out]#  ('A', (' ', 237, ' ')),
#[Out]#  ('A', (' ', 238, ' ')),
#[Out]#  ('A', (' ', 239, ' ')),
#[Out]#  ('A', (' ', 240, ' ')),
#[Out]#  ('A', (' ', 241, ' ')),
#[Out]#  ('A', (' ', 242, ' ')),
#[Out]#  ('A', (' ', 243, ' ')),
#[Out]#  ('A', (' ', 244, ' ')),
#[Out]#  ('A', (' ', 245, ' ')),
#[Out]#  ('A', (' ', 246, ' ')),
#[Out]#  ('A', (' ', 247, ' ')),
#[Out]#  ('A', (' ', 248, ' ')),
#[Out]#  ('A', (' ', 249, ' ')),
#[Out]#  ('A', (' ', 250, ' ')),
#[Out]#  ('A', (' ', 251, ' ')),
#[Out]#  ('A', (' ', 252, ' ')),
#[Out]#  ('A', (' ', 253, ' ')),
#[Out]#  ('A', (' ', 254, ' ')),
#[Out]#  ('A', (' ', 255, ' ')),
#[Out]#  ('A', (' ', 256, ' ')),
#[Out]#  ('A', (' ', 257, ' ')),
#[Out]#  ('A', (' ', 258, ' ')),
#[Out]#  ('A', (' ', 259, ' ')),
#[Out]#  ('A', (' ', 260, ' ')),
#[Out]#  ('A', (' ', 261, ' ')),
#[Out]#  ('A', (' ', 262, ' ')),
#[Out]#  ('A', (' ', 263, ' ')),
#[Out]#  ('A', (' ', 264, ' ')),
#[Out]#  ('A', (' ', 265, ' ')),
#[Out]#  ('A', (' ', 266, ' ')),
#[Out]#  ('A', (' ', 267, ' ')),
#[Out]#  ('A', (' ', 268, ' ')),
#[Out]#  ('A', (' ', 269, ' ')),
#[Out]#  ('A', (' ', 270, ' ')),
#[Out]#  ('A', (' ', 271, ' ')),
#[Out]#  ('A', (' ', 272, ' ')),
#[Out]#  ('A', (' ', 273, ' ')),
#[Out]#  ('A', (' ', 274, ' ')),
#[Out]#  ('A', (' ', 275, ' ')),
#[Out]#  ('A', (' ', 276, ' ')),
#[Out]#  ('A', (' ', 277, ' ')),
#[Out]#  ('A', (' ', 278, ' ')),
#[Out]#  ('A', (' ', 279, ' ')),
#[Out]#  ('A', (' ', 280, ' ')),
#[Out]#  ('A', (' ', 281, ' ')),
#[Out]#  ('A', (' ', 282, ' ')),
#[Out]#  ('A', (' ', 283, ' ')),
#[Out]#  ('A', (' ', 284, ' ')),
#[Out]#  ('A', (' ', 285, ' ')),
#[Out]#  ('A', (' ', 286, ' ')),
#[Out]#  ('A', (' ', 287, ' ')),
#[Out]#  ('A', (' ', 288, ' ')),
#[Out]#  ('A', (' ', 289, ' '))]
test_res.chain
dir(test_res)
#[Out]# ['__delitem__',
#[Out]#  '__doc__',
#[Out]#  '__getitem__',
#[Out]#  '__init__',
#[Out]#  '__iter__',
#[Out]#  '__len__',
#[Out]#  '__module__',
#[Out]#  '__repr__',
#[Out]#  '_sort',
#[Out]#  'add',
#[Out]#  'child_dict',
#[Out]#  'child_list',
#[Out]#  'detach_child',
#[Out]#  'detach_parent',
#[Out]#  'disordered',
#[Out]#  'flag_disordered',
#[Out]#  'full_id',
#[Out]#  'get_full_id',
#[Out]#  'get_id',
#[Out]#  'get_iterator',
#[Out]#  'get_level',
#[Out]#  'get_list',
#[Out]#  'get_parent',
#[Out]#  'get_resname',
#[Out]#  'get_segid',
#[Out]#  'get_unpacked_list',
#[Out]#  'has_id',
#[Out]#  'id',
#[Out]#  'is_disordered',
#[Out]#  'level',
#[Out]#  'parent',
#[Out]#  'resname',
#[Out]#  'segid',
#[Out]#  'set_parent',
#[Out]#  'sort',
#[Out]#  'xtra']
test_res.resname
#[Out]# 'MET'
test_res.id
#[Out]# (' ', 1, ' ')
test_res.segname
test_res.segid
#[Out]# ''
test_res.get_full_id()
#[Out]# ('3PRN', 0, 'A', (' ', 1, ' '))
test_res.get_id()
#[Out]# (' ', 1, ' ')
y[(test_res.get_full_id()[2], test_res.get_full_id[3])]
y[(test_res.get_full_id()[2], test_res.get_full_id()[3])]
#[Out]# (<Residue MET het=  resseq=1 icode= >,
#[Out]#  '-',
#[Out]#  147,
#[Out]#  0.7819148936170213,
#[Out]#  360.0,
#[Out]#  140.5)
x.child_dict[0]
#[Out]# <Model id=0>
x.child_dict[0].child_dict
#[Out]# {' ': <Chain id= >, 'A': <Chain id=A>}
x.child_dict[0].child_dict[' ']
#[Out]# <Chain id= >
x.child_dict[0].child_dict[' '].get_residues()
x.child_dict[0].child_dict[' '].get_residues
stru = x
stru
#[Out]# <Structure id=3PRN>
stru.child_dict
#[Out]# {0: <Model id=0>}
stru_dssp = DSSP_win.DSSP(stru, 'structures/aligned_3PRN.pdb')
stru_dssp = DSSP_win.DSSP(stru.child_dict[0], 'structures/aligned_3PRN.pdb')
stru_dssp
#[Out]# <DSSP_win.DSSP instance at 0x049D17D8>
dir(stru_dssp)
#[Out]# ['__contains__',
#[Out]#  '__doc__',
#[Out]#  '__getitem__',
#[Out]#  '__init__',
#[Out]#  '__iter__',
#[Out]#  '__len__',
#[Out]#  '__module__',
#[Out]#  '_translate_id',
#[Out]#  'has_key',
#[Out]#  'keys',
#[Out]#  'property_dict',
#[Out]#  'property_keys',
#[Out]#  'property_list']
stru_dssp.keys()[:10]
#[Out]# [('A', (' ', 1, ' ')),
#[Out]#  ('A', (' ', 2, ' ')),
#[Out]#  ('A', (' ', 3, ' ')),
#[Out]#  ('A', (' ', 4, ' ')),
#[Out]#  ('A', (' ', 5, ' ')),
#[Out]#  ('A', (' ', 6, ' ')),
#[Out]#  ('A', (' ', 7, ' ')),
#[Out]#  ('A', (' ', 8, ' ')),
#[Out]#  ('A', (' ', 9, ' ')),
#[Out]#  ('A', (' ', 10, ' '))]
stru_dssp[stru_dssp.keys()[0]]
#[Out]# (<Residue MET het=  resseq=1 icode= >,
#[Out]#  '-',
#[Out]#  147,
#[Out]#  0.7819148936170213,
#[Out]#  360.0,
#[Out]#  140.5)
get_ipython().magic(u'pinfo Bio.PDB.AbstractPropertyMap')
get_ipython().system(u'dir /on ')
x
#[Out]# <Structure id=3PRN>
test_res
#[Out]# <Residue MET het=  resseq=1 icode= >
dir(test_res)
#[Out]# ['__delitem__',
#[Out]#  '__doc__',
#[Out]#  '__getitem__',
#[Out]#  '__init__',
#[Out]#  '__iter__',
#[Out]#  '__len__',
#[Out]#  '__module__',
#[Out]#  '__repr__',
#[Out]#  '_sort',
#[Out]#  'add',
#[Out]#  'child_dict',
#[Out]#  'child_list',
#[Out]#  'detach_child',
#[Out]#  'detach_parent',
#[Out]#  'disordered',
#[Out]#  'flag_disordered',
#[Out]#  'full_id',
#[Out]#  'get_full_id',
#[Out]#  'get_id',
#[Out]#  'get_iterator',
#[Out]#  'get_level',
#[Out]#  'get_list',
#[Out]#  'get_parent',
#[Out]#  'get_resname',
#[Out]#  'get_segid',
#[Out]#  'get_unpacked_list',
#[Out]#  'has_id',
#[Out]#  'id',
#[Out]#  'is_disordered',
#[Out]#  'level',
#[Out]#  'parent',
#[Out]#  'resname',
#[Out]#  'segid',
#[Out]#  'set_parent',
#[Out]#  'sort',
#[Out]#  'xtra']
test_res.get_resname
#[Out]# <bound method Residue.get_resname of <Residue MET het=  resseq=1 icode= >>
from sundries import one_letter
one_letter
#[Out]# {'ala': 'A',
#[Out]#  'arg': 'R',
#[Out]#  'asn': 'N',
#[Out]#  'asp': 'D',
#[Out]#  'cys': 'C',
#[Out]#  'gln': 'Q',
#[Out]#  'glu': 'E',
#[Out]#  'gly': 'G',
#[Out]#  'his': 'H',
#[Out]#  'ile': 'I',
#[Out]#  'leu': 'L',
#[Out]#  'lys': 'K',
#[Out]#  'met': 'M',
#[Out]#  'phe': 'F',
#[Out]#  'pro': 'P',
#[Out]#  'ser': 'S',
#[Out]#  'thr': 'T',
#[Out]#  'trp': 'W',
#[Out]#  'tyr': 'Y',
#[Out]#  'val': 'V'}
one_letter['MET']
#[Out]# 'M'
test_res.get_resname()
#[Out]# 'MET'
get_ipython().system(u'dir /on ')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd gonnet\\ aligned')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd "gonnet aligned/')
get_ipython().system(u'dir /on ')
import Bio.AlignIO
get_ipython().magic(u'pinfo Bio.AlignIO.read')
get_ipython().magic(u'pinfo Bio.AlignIO.parse')
get_ipython().magic(u'pinfo Bio.AlignIO.read')
get_ipython().system(u'dir /on ')
x = Bio.AlignIO.read('3JTY with nn.9.1.clu', 'clustal')
len(x)
#[Out]# 173
x[0]
#[Out]# SeqRecord(seq=Seq('------------------------------------------------------...---', SingleLetterAlphabet()), id='template_3JTY', name='<unknown name>', description='template_3JTY', dbxrefs=[])
x[1]
#[Out]# SeqRecord(seq=Seq('-------------------------------------MKPSTPPSYLLP-----...---', SingleLetterAlphabet()), id='gi|70728709|ref|YP', name='<unknown name>', description='gi|70728709|ref|YP', dbxrefs=[])
x[2]
#[Out]# SeqRecord(seq=Seq('------------------------------------------------------...---', SingleLetterAlphabet()), id='gi|43971564|gb|EAG', name='<unknown name>', description='gi|43971564|gb|EAG', dbxrefs=[])
x[2].id
#[Out]# 'gi|43971564|gb|EAG'
x[0].id
#[Out]# 'template_3JTY'
stru
#[Out]# <Structure id=3PRN>
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd ..')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd structures/')
stru = Bio.PDB.PDBParser().get_structure('aligned_1A0S.pdb', '1A0S')
stru = Bio.PDB.PDBParser().get_structure('1A0S', 'aligned_1A0S.pdb')
warnings.simplefilter('ignore')
stru = Bio.PDB.PDBParser().get_structure('1A0S', 'aligned_1A0S.pdb')
get_ipython().system(u'dir /on ')
get_ipython().magic(u'cd ..')
get_ipython().magic(u"cd 'gonnet aligned/")
get_ipython().magic(u"cd 'gonnet aligned/'")
get_ipython().system(u'dir /on ')
align = Bio.AlignIO.read('1A0S with cluster73.clu')
align = Bio.AlignIO.read('1A0S with cluster73.clu', 'clustal')
align[0].id
#[Out]# 'gi|3914230|sp|Q567'
align[1].id
#[Out]# 'gi|15601781|ref|NP'
align[2].id
#[Out]# 'gi|84394457|ref|ZP'
[seq for seq in align if 'template' in seq.id]
#[Out]# [SeqRecord(seq=Seq('------------------------------------------------------...---', SingleLetterAlphabet()), id='template_1A0S', name='<unknown name>', description='template_1A0S', dbxrefs=[])]
sequence = Out[245][0]
sequence
#[Out]# SeqRecord(seq=Seq('------------------------------------------------------...---', SingleLetterAlphabet()), id='template_1A0S', name='<unknown name>', description='template_1A0S', dbxrefs=[])
get_ipython().magic(u'cd ..')
get_ipython().magic(u'run family_moments.py')
x = map_residues_to_alignment_positions(stru.get_residues(), sequence)
get_ipython().magic(u'run family_moments.py')
x = map_residues_to_alignment_positions(stru.get_residues(), sequence)
x.items()[:10]
#[Out]# [(<Residue ILE het=  resseq=235 icode= >, 328),
#[Out]#  (<Residue GLY het=  resseq=293 icode= >, 432),
#[Out]#  (<Residue GLY het=  resseq=207 icode= >, 300),
#[Out]#  (<Residue VAL het=  resseq=413 icode= >, 598),
#[Out]#  (<Residue PRO het=  resseq=171 icode= >, 261),
#[Out]#  (<Residue ARG het=  resseq=190 icode= >, 282),
#[Out]#  (<Residue ILE het=  resseq=198 icode= >, 290),
#[Out]#  (<Residue THR het=  resseq=208 icode= >, 301),
#[Out]#  (<Residue ASP het=  resseq=236 icode= >, 329),
#[Out]#  (<Residue LEU het=  resseq=182 icode= >, 274)]
sequence[328]
#[Out]# 'I'
sequence[432]
#[Out]# 'G'
sequence[300]
#[Out]# 'G'
sequence[598]
#[Out]# 'V'
x = 'would it get some wind for the sailboat'
get_ipython().magic(u'pinfo x.translate')
intab = 'ws'
outtab = 'vz'
import string
trantab = maketrans(intab, outtab)
trantab = string.maketrans(intab, outtab)
trantab
#[Out]# '\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrztuvvxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff'
x
#[Out]# 'would it get some wind for the sailboat'
x.translate(trantab)
#[Out]# 'vould it get zome vind for the zailboat'
def eridan(x):
    if x=='w' or x=='v':
        return x+x
    else:
        return x
    
x
#[Out]# 'would it get some wind for the sailboat'
''.join(eridan(i) for i in x)
#[Out]# 'wwould it get some wwind for the sailboat'
def terezi(char):
    if char == 'e':
        return 3
    if char == 'a':
        return 4
    if char == 'i':
        ret
        
def terezi(char):
    if char.lower() == 'e':
        return 3
    if char.lower() == 'a':
        return 4
    if char.lower() == 'i':
        return 1
    
def terezi(char):
    if char.lower() == 'e':
        return '3'
    if char.lower() == 'a':
        return '4'
    if char.lower() == 'i':
        return '1'
    else:
        return char.upper()
    
''.join(terezi(char) for char in x)
#[Out]# 'WOULD 1T G3T SOM3 W1ND FOR TH3 S41LBO4T'
Bio.PDB.AbstractPropertyMap
#[Out]# <module 'Bio.PDB.AbstractPropertyMap' from 'c:\python27\lib\site-packages\Bio\PDB\AbstractPropertyMap.pyc'>
get_ipython().magic(u'pinfo Bio.PDB.AbstractPropertyMap')
Bio.PDB.AbstractPropertyMap.AbstractResiduePropertyMap
#[Out]# Bio.PDB.AbstractPropertyMap.AbstractResiduePropertyMap
get_ipython().magic(u'pinfo Bio.PDB.AbstractPropertyMap.AbstractResiduePropertyMap')
x = Bio.PDB.AbstractPropertyMap.AbstractResiduePropertyMap
x = Bio.PDB.AbstractPropertyMap.AbstractResiduePropertyMap()
get_ipython().magic(u'pinfo Bio.PDB.AbstractPropertyMap')
stru
#[Out]# <Structure id=1A0S>
test_res
#[Out]# <Residue MET het=  resseq=1 icode= >
dir(test_res)
#[Out]# ['__delitem__',
#[Out]#  '__doc__',
#[Out]#  '__getitem__',
#[Out]#  '__init__',
#[Out]#  '__iter__',
#[Out]#  '__len__',
#[Out]#  '__module__',
#[Out]#  '__repr__',
#[Out]#  '_sort',
#[Out]#  'add',
#[Out]#  'child_dict',
#[Out]#  'child_list',
#[Out]#  'detach_child',
#[Out]#  'detach_parent',
#[Out]#  'disordered',
#[Out]#  'flag_disordered',
#[Out]#  'full_id',
#[Out]#  'get_full_id',
#[Out]#  'get_id',
#[Out]#  'get_iterator',
#[Out]#  'get_level',
#[Out]#  'get_list',
#[Out]#  'get_parent',
#[Out]#  'get_resname',
#[Out]#  'get_segid',
#[Out]#  'get_unpacked_list',
#[Out]#  'has_id',
#[Out]#  'id',
#[Out]#  'is_disordered',
#[Out]#  'level',
#[Out]#  'parent',
#[Out]#  'resname',
#[Out]#  'segid',
#[Out]#  'set_parent',
#[Out]#  'sort',
#[Out]#  'xtra']
from Bio.SCOP.raf import to_one_letter_code
from Bio.SCOP.Raf import to_one_letter_code
to_one_letter_code
#[Out]# {'2AS': 'D',
#[Out]#  '3AH': 'H',
#[Out]#  '5HP': 'E',
#[Out]#  'ACL': 'R',
#[Out]#  'AGM': 'R',
#[Out]#  'AIB': 'A',
#[Out]#  'ALA': 'A',
#[Out]#  'ALM': 'A',
#[Out]#  'ALO': 'T',
#[Out]#  'ALY': 'K',
#[Out]#  'ARG': 'R',
#[Out]#  'ARM': 'R',
#[Out]#  'ASA': 'D',
#[Out]#  'ASB': 'D',
#[Out]#  'ASK': 'D',
#[Out]#  'ASL': 'D',
#[Out]#  'ASN': 'N',
#[Out]#  'ASP': 'D',
#[Out]#  'ASQ': 'D',
#[Out]#  'ASX': 'B',
#[Out]#  'AYA': 'A',
#[Out]#  'BCS': 'C',
#[Out]#  'BHD': 'D',
#[Out]#  'BMT': 'T',
#[Out]#  'BNN': 'A',
#[Out]#  'BUC': 'C',
#[Out]#  'BUG': 'L',
#[Out]#  'C5C': 'C',
#[Out]#  'C6C': 'C',
#[Out]#  'CCS': 'C',
#[Out]#  'CEA': 'C',
#[Out]#  'CGU': 'E',
#[Out]#  'CHG': 'A',
#[Out]#  'CLE': 'L',
#[Out]#  'CME': 'C',
#[Out]#  'CSD': 'A',
#[Out]#  'CSO': 'C',
#[Out]#  'CSP': 'C',
#[Out]#  'CSS': 'C',
#[Out]#  'CSW': 'C',
#[Out]#  'CSX': 'C',
#[Out]#  'CXM': 'M',
#[Out]#  'CY1': 'C',
#[Out]#  'CY3': 'C',
#[Out]#  'CYG': 'C',
#[Out]#  'CYM': 'C',
#[Out]#  'CYQ': 'C',
#[Out]#  'CYS': 'C',
#[Out]#  'DAH': 'F',
#[Out]#  'DAL': 'A',
#[Out]#  'DAR': 'R',
#[Out]#  'DAS': 'D',
#[Out]#  'DCY': 'C',
#[Out]#  'DGL': 'E',
#[Out]#  'DGN': 'Q',
#[Out]#  'DHA': 'A',
#[Out]#  'DHI': 'H',
#[Out]#  'DIL': 'I',
#[Out]#  'DIV': 'V',
#[Out]#  'DLE': 'L',
#[Out]#  'DLY': 'K',
#[Out]#  'DNP': 'A',
#[Out]#  'DPN': 'F',
#[Out]#  'DPR': 'P',
#[Out]#  'DSN': 'S',
#[Out]#  'DSP': 'D',
#[Out]#  'DTH': 'T',
#[Out]#  'DTR': 'W',
#[Out]#  'DTY': 'Y',
#[Out]#  'DVA': 'V',
#[Out]#  'EFC': 'C',
#[Out]#  'FLA': 'A',
#[Out]#  'FME': 'M',
#[Out]#  'GGL': 'E',
#[Out]#  'GL3': 'G',
#[Out]#  'GLN': 'Q',
#[Out]#  'GLU': 'E',
#[Out]#  'GLX': 'Z',
#[Out]#  'GLY': 'G',
#[Out]#  'GLZ': 'G',
#[Out]#  'GMA': 'E',
#[Out]#  'GSC': 'G',
#[Out]#  'HAC': 'A',
#[Out]#  'HAR': 'R',
#[Out]#  'HIC': 'H',
#[Out]#  'HIP': 'H',
#[Out]#  'HIS': 'H',
#[Out]#  'HMR': 'R',
#[Out]#  'HPQ': 'F',
#[Out]#  'HTR': 'W',
#[Out]#  'HYP': 'P',
#[Out]#  'IIL': 'I',
#[Out]#  'ILE': 'I',
#[Out]#  'IYR': 'Y',
#[Out]#  'KCX': 'K',
#[Out]#  'LEU': 'L',
#[Out]#  'LLP': 'K',
#[Out]#  'LLY': 'K',
#[Out]#  'LTR': 'W',
#[Out]#  'LYM': 'K',
#[Out]#  'LYS': 'K',
#[Out]#  'LYZ': 'K',
#[Out]#  'MAA': 'A',
#[Out]#  'MEN': 'N',
#[Out]#  'MET': 'M',
#[Out]#  'MHS': 'H',
#[Out]#  'MIS': 'S',
#[Out]#  'MLE': 'L',
#[Out]#  'MPQ': 'G',
#[Out]#  'MSA': 'G',
#[Out]#  'MSE': 'M',
#[Out]#  'MVA': 'V',
#[Out]#  'NEM': 'H',
#[Out]#  'NEP': 'H',
#[Out]#  'NLE': 'L',
#[Out]#  'NLN': 'L',
#[Out]#  'NLP': 'L',
#[Out]#  'NMC': 'G',
#[Out]#  'OAS': 'S',
#[Out]#  'OCS': 'C',
#[Out]#  'OMT': 'M',
#[Out]#  'PAQ': 'Y',
#[Out]#  'PCA': 'E',
#[Out]#  'PEC': 'C',
#[Out]#  'PHE': 'F',
#[Out]#  'PHI': 'F',
#[Out]#  'PHL': 'F',
#[Out]#  'PR3': 'C',
#[Out]#  'PRO': 'P',
#[Out]#  'PRR': 'A',
#[Out]#  'PTR': 'Y',
#[Out]#  'PYX': 'C',
#[Out]#  'SAC': 'S',
#[Out]#  'SAR': 'G',
#[Out]#  'SCH': 'C',
#[Out]#  'SCS': 'C',
#[Out]#  'SCY': 'C',
#[Out]#  'SEL': 'S',
#[Out]#  'SEP': 'S',
#[Out]#  'SER': 'S',
#[Out]#  'SET': 'S',
#[Out]#  'SHC': 'C',
#[Out]#  'SHR': 'K',
#[Out]#  'SMC': 'C',
#[Out]#  'SOC': 'C',
#[Out]#  'STY': 'Y',
#[Out]#  'SVA': 'S',
#[Out]#  'THR': 'T',
#[Out]#  'TIH': 'A',
#[Out]#  'TPL': 'W',
#[Out]#  'TPO': 'T',
#[Out]#  'TPQ': 'A',
#[Out]#  'TRG': 'K',
#[Out]#  'TRO': 'W',
#[Out]#  'TRP': 'W',
#[Out]#  'TYB': 'Y',
#[Out]#  'TYQ': 'Y',
#[Out]#  'TYR': 'Y',
#[Out]#  'TYS': 'Y',
#[Out]#  'TYY': 'Y',
#[Out]#  'UNK': 'X',
#[Out]#  'VAL': 'V'}
get_ipython().magic(u'pinfo DSSP_win.DSSP')
stru
#[Out]# <Structure id=1A0S>
dir(stru)
#[Out]# ['__delitem__',
#[Out]#  '__doc__',
#[Out]#  '__getitem__',
#[Out]#  '__init__',
#[Out]#  '__iter__',
#[Out]#  '__len__',
#[Out]#  '__module__',
#[Out]#  '__repr__',
#[Out]#  '_sort',
#[Out]#  'add',
#[Out]#  'child_dict',
#[Out]#  'child_list',
#[Out]#  'detach_child',
#[Out]#  'detach_parent',
#[Out]#  'full_id',
#[Out]#  'get_atoms',
#[Out]#  'get_chains',
#[Out]#  'get_full_id',
#[Out]#  'get_id',
#[Out]#  'get_iterator',
#[Out]#  'get_level',
#[Out]#  'get_list',
#[Out]#  'get_parent',
#[Out]#  'get_residues',
#[Out]#  'has_id',
#[Out]#  'header',
#[Out]#  'id',
#[Out]#  'level',
#[Out]#  'parent',
#[Out]#  'set_parent',
#[Out]#  'xtra']
import zenergy
get_ipython().magic(u'pinfo zenergy')
get_ipython().magic(u'pinfo zenergy.Calculator')
get_ipython().magic(u'pinfo zenergy.__init__')
get_ipython().system(u'dir /on ')
import csv
x = csv.reader(open('published params.csv')).readrows()
x = csv.reader(open('published params.csv')).read()
